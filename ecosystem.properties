########################################################################################
# CONTAINER TESTS
########################################################################################
#logging.level=4
#date.format=yyyy-MM-dd'T'HH:mm:ss.SSSSSSXXX
#logger.level=500
#mongo.secure.data=true
#mongo.ecosystem.user=ecosystem_user
#mongo.port=27017
#mongo.server=localhost
#mongo.ecosystem.password=EcoEco321
#mongo.connect=mongodb://ecosystem_user:EcoEco321@localhost:27017/?authSource=admin
#mongo.authentication.source=admin
#logging.database=logging
#logging.collection=ecosystemruntime
#logging.collection.response=ecosystemruntime_response
#logging.detail=false
#user.profiles=profilesMaster
#predictor.name=wellness_score
#
#user.data=/Users/ecosystem/data/aws_server_properties/fnb/runtime-wellness-score/tmp/
#user.generated.models=/Users/ecosystem/data/aws_server_properties/fnb/runtime-wellness-score/tmp/
#
#plugin.prescore=com.ecosystem.plugin.customer.PrePredictCustomer
#plugin.postscore=com.ecosystem.plugin.customer.PostScoreFinancialWellness
#
#mojo.key=GBM_5_AutoML_20200715_160601.zip
#
#predictor.param.lookup={predictor:'wellness_score',mojo:1,database:'mongodb',db:'fnb',table:'wellnessFeatureStore',lookup:{key:'CUST_NO',value:123},result:{parm1:'field1', parm2:'field2'}}
#predictor.param.lookup.features=CUST_NO,saveScore,rtiScore,prismScore,productiveSpendScore
#predictor.corpora=[{name:'wellness_score_methods',database:'mongodb',db:'fnb',table:'wellnessScoreMethods'}]
#
#predictor.offercache=0
#predictor.epsilon=0.05

########################################################################################
########################################################################################

#logging.level=4
#date.format=yyyy-MM-dd'T'HH:mm:ss.SSSSSSXXX
#logger.level=500
#mongo.secure.data=true
#mongo.ecosystem.user=ecosystem_user
#mongo.port=27017
#mongo.server=localhost
#mongo.ecosystem.password=EcoEco321
#mongo.connect=mongodb://ecosystem_user:EcoEco321@localhost:27017/?authSource=admin
#mongo.authentication.source=admin
#logging.database=logging
#logging.collection=ecosystemruntime
#logging.collection.response=ecosystemruntime_response
#logging.detail=false
#user.profiles=profilesMaster
#predictor.name=spending_personality
#
#user.data=/Users/ecosystem/data/aws_server_properties/fnb/runtime-spend-score/
#user.generated.models=/Users/ecosystem/data/aws_server_properties/fnb/runtime-spend-score/
#
#plugin.prescore=com.ecosystem.plugin.customer.PrePredictCustomer
#plugin.postscore=com.ecosystem.plugin.customer.PostScoreSpendingPersonality
#
#mojo.key=GBM_5_AutoML_20200715_160601.zip
#
#predictor.param.lookup={predictor:'spending_personality',mojo:1,database:'mongodb',db:'fnb',table:'fnbPrismFeatureStore20201',lookup:{key:'CUST_NO',value:123},result:{parm1:'field1', parm2:'field2'}}
#predictor.param.lookup.features=CUST_NO,personalityType,15428Spend,15696Spend,15313Spend,15313Frequency,CUST_REC_OPEN_DATE,ExperientialSpend,BOND_IND,5541Spend,RGN_CDE,CUST_AGE,Prepaid_BuyFrequency,15654Spend,TransfersFrequency,15691Frequency,CUST_TOT_DR_BALs,TransfersSpend,NO_WES_ACCT,15312Spend,6545Spend,15751Spend,15751Frequency,1FrequencyN,EssentialSpend,EMPLOYER_NAME,IntrovertSpend
#
#predictor.corpora=[{name:'personality_intervention',database:'mongodb',db:'fnb',table:'spendScoreInterventions'}]
#
#predictor.offercache=0
#predictor.epsilon=0.05

########################################################################################
########################################################################################



# DYNAMIC PROPERTIES FROM THE PROJECT CONFIGURATOR
#
#  --properties=mongodb://ecosystem_user:EcoEco321@127.0.0.1/profilesMaster --key=profilesMaster/projects/eStore-Recommender/estore_recommender/0.7.9 -Dproperties=x -Dkey=y -Dspring-boot.run.arguments="--properties=xxx"
#



# ======================================================================================================================
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
# ======================================================================================================================
# Copyright (c) 2020 ecosystem.Ai and/or its affiliates. All rights reserved.
#
# Startup parameters:
# --port <number>
# Port number to allocate to runtime, if option is not set then the default is 8091
# --ip <ip address>
# Set ip address to allow incoming calls
# --security
# Turn security on
# --password <password> --username <username>
# Username and password combination for default security login
# --role
# Role can be either ADMIN or USER
#
# Some steps to consider:
# Database access:
# 1. If Cassandra: ensure that you can access Cassandra cluster with cqlsh and security credentials
# 2. Ensure that you can connect to MongoDB with server and security credentials
# 3. Setup logging collection for tracking of responses as used in dashboards and further scoring
# 4. use logging response setting if prediction responses are recorded and used for re-scoring later, and for budget
# Runtime config:
# 1. review mojo list of models in folder assigned: mojo.key
# 2. check pre- and post-score logic plugins if needed
# 3. check that your feature store fields match the mojo or tensorflow deployment including data types (runtime will attempt to dynamically fix this))
# 4. check that database settings are correct: predictor.param.lookup Also ensure datatype by using a number or string in value field (Numeric=123, String="123"): lookup:{key:'msisdn',value:123}
# 5. check that feature store fields match the config in runtime under predictor.param.lookup.features
# 6. if you use a offer/product matrix check that fields in matrix database match settings in predictor.offer.matrix
# 7. if a customer plugin is used, check that fields used in post-scoring logic match or are valid in data sources: features and offer_matrix
# 8. if model selector is used, check that field values are correct: predictor.selector.setup
# 9. for model selector, check that predictor.selector.model field match to mojo list is valid (1=1st mojo, 2=-2nd mojo, etc)
# 10. if budget tracker is used check database setting under: predictor.offer.budget
# 11. for budget tracker configure x, y and numeric in matrix at: predictor.offer.budget.params
# 12. if offers are time bound, set cache value in seconds. Use 0 to disable.
# 13. if the multi armed bandit is used set the epsilon
#
# ======================================================================================================================

#project.description=Categorization
#logging.level=4

#date.format=yyyy-MM-dd'T'HH:mm:ss.SSSSSSXXX

# Generate JWT token with this as the key for local retrieval
#security.key=ecosystem
#security.issuer=ecosystem
#security.utilities.key=b9e999be-abdc-4e10-9e38-3cffc6340e5c
#security.role=ADMIN
#security.whitelist=0:0:0:0:0:0:0:1

# Logger levels
# OFF	0
# FATAL	100
# ERROR	200
# WARN	300
# INFO	400
# DEBUG	500
# TRACE	600
# ALL   800
#logger.level=500

#user.data=./
#user.generated.models=./

# Default Presto settings
#presto.url=jdbc:presto://localhost:8084/
#presto.connection=cassandra/system_schema?user=cassandra
#presto.url=jdbc:presto://localhost:8084/
#presto.connection=mongodb/genesys_gia.features?user=root


# MongoDB Logfile params
#mongo.secure.data=false
#mongo.ecosystem.user=ecosystem_user
#mongo.port=27017
#mongo.server=localhost
#mongo.ecosystem.password=EcoEco321

# Use server:port as format to set connection properties
# If MongoDB is not on a cluster and authentication is same as collection in use, then comment out line below

#mongo.port=27217
#mongo.server=13.244.163.105
#mongo.ecosystem.password=d17dd19e-bed7-4e98-a636-257dd51ef03d
#mongo.authentication.source=admin
#mongo.connect=mongodb://ecosystem_user:EcoEco321@localhost:27017/?authSource=admin
#mongo.connect=mongodb://ecosystem_user:d17dd19e-bed7-4e98-a636-257dd51ef03d@server.ecosystem.ai:27117/?authSource=admin
# AWS MogoDB cluster
#mongo.connect=mongodb://ecosystem:1c670ee4-05d4-48f9-b79c-1e847@3.216.126.191:27017/?authSource=admin

#mongo.connect=mongodb://localhost:27017,host2:27017,host3:27017/?replicaSet=myReplicaSet
#mongo.connect=mongodb://user:password@localhost:27017,user:password@192.168.1.25:27017,user:password@192.168.1.48:27917/?replicaSet=ecosystemReplicaset&authSource=admin

#logging.database=logging
#logging.collection=ecosystemruntime
#logging.collection.response=ecosystemruntime_response
#logging.detail=false

# Plugin Loader for Pre- and post-scoring logic or interventions
# plugin.prescore=
# plugin.postscore=com.ecosystem.plugin.customer.PostScoreOffers
# plugin.postscore=com.ecosystem.plugin.customer.PostScoreBalanceEnquiry

# Campaign Configuration

#user.profiles=profilesFNB
#user.profiles=profilesMaster
#user.data=/Users/ecosystem/data/master/
#user.generated.models=/Users/ecosystem/data/master/models/
#mojo.key=DRF_1_AutoML_20190207_154638.zip
#predictor.param.lookup=none
#predictor.param.lookup.features=none
#predictor.post.lookup=none


# Campaign Configuration
#user.profiles=profilesMaster
#user.data=/Users/ecosystem/data/vodacom/
#user.generated.models=/Users/ecosystem/data/vodacom/models/
#mojo.key=j4uvoice_awarenesssms_20190720.zip,priceplan_001.zip
#predictor.param.lookup=none
#predictor.param.lookup.features=none
#predictor.post.lookup=none


## ======================================================================================================================
## Campaign Configuration: Recharge Recommender
## ======================================================================================================================
# predictor.param.lookup={predictor:'j4uvoice_awarenesssms_20190720',mojo:1,database:'cassandra.db1',table:'tbl1',lookup:{key1:'$MSISDN'},result:{parm1:'field1', parm2:'field2'}}
# predictor.param.lookup={predictor:'j4uvoice_awarenesssms_20190720',mojo:1,database:'mongodb.master',table:'features',lookup:{key:'customer_id',value:724578004},result:{parm1:'field1', parm2:'field2'}}
# predictor.param.lookup={predictor:'j4uvoice_awarenesssms_20190720',mojo:1,database:'cassandra',table:'ecosystem.enriched_interactions',lookup:{key:'customerId',value:'825214476'},result:{parm1:'field1', parm2:'field2'}}

# Remember that key will only work if the API is called without any parameters:
# Example: http://localhost:8091/getParamsFromDB?params=%7Bcustomer_id%3A725013850%7D will return params for customer_id as specified.
# Example: http://localhost:8091/getParamsFromDB?params=%7B%7D will return the default as specified in the setting below.

# user.data=/Users/ecosystem/data/vodacom/RechargeRecommenderData/
# user.generated.models=/Users/ecosystem/data/vodacom/RechargeRecommenderData/models/

# MOJO keys are loaded into memory and be reloaded with the /reload endpoint
# The sequence is important as first model in list is referenced 1, and second as 2 etc.
# mojo.key=rechargerecommender_databundle_20190827.zip,rechargerecommender_databundle_20190827-1.zip,rechargerecommender_databundle_20190827-2.zip,rechargerecommender_databundle_20190827-3.zip

# Model selection is used to decide on which model to use based on a value from a database.
#predictor.selector.setup={database:'cassandra',table:'ecosystem.features',lookup:{key:'msisdn',value:123,fields:'Slmu_Dvc_Type_Grp_Nm'}}
#predictor.selector.model={'Tablet':[1],'Smart Phone':[2],'Feature Phone':[3],'Not Applicable':[4]}

# Database type can be Cassandra, MongoDB, Presto
# Lookup is used to extract the parameters from the database and pass onto model predictor,
# the 'value' value is ignored once the runtime finds the value in database.
# Review the datatype of the lookup: value key. If the value is in quotes then it will be referenced as a string,
# if no quotes then will be referenced as a number.

###predictor.param.lookup={predictor:'rechargerecommender_databundle_20190827',mojo:1,database:'cassandra',table:'ecosystem.json_features',lookup:{key:'Msisdn',value:827010119},result:{parm1:'field1', parm2:'field2'}}
# If a field in the database contains the list of parameters in JSON use eg <field>:<param1>,<param2>
###predictor.param.lookup.features=parameters:VALUE_BAND,Customer_Segment,M1_USAGE,M1_DATA_ACTIVE_DAYS,DATA_BURN_RATE,M1_UNIQUE_DATA_PCH_DAYS,AVG_DATA_ALLOC,AVG_DATA_BNDL_SPND,MAX_DT_PCH_ZAR,AVG_DAYS_BTW_DT_PCH_V1,AVG_DATA_PCHS_PER_DAY,DAYS_LAST_DATA_PCH,D_NA_01,D_NA_07,D_NA_M1,DATA_IB_PCT,M1_IB_REV,DATA_SPND_PCT,AVG_RECHARGE_SPND,DATA_GRP,VOICE_GRP,RECHARGE_GRP,JFY_ENG_IND,Slmu_Dvc_Type_Grp_Nm

# Recharge Recommender Campaign
# Features
# predictor.param.lookup={predictor:'rechargerecommender_databundle_20190827',mojo:1,database:'cassandra',table:'ecosystem.features',lookup:{key:'Msisdn',value:827010119},result:{parm1:'field1', parm2:'field2'}}
# predictor.param.lookup.features=VALUE_BAND,Customer_Segment,M1_USAGE,M1_DATA_ACTIVE_DAYS,DATA_BURN_RATE,M1_UNIQUE_DATA_PCH_DAYS,AVG_DATA_ALLOC,AVG_DATA_BNDL_SPND,MAX_DT_PCH_ZAR,AVG_DAYS_BTW_DT_PCH_V1,AVG_DATA_PCHS_PER_DAY,DAYS_LAST_DATA_PCH,D_NA_01,D_NA_07,D_NA_M1,DATA_IB_PCT,M1_IB_REV,DATA_SPND_PCT,AVG_RECHARGE_SPND,DATA_GRP,VOICE_GRP,RECHARGE_GRP,JFY_ENG_IND,Slmu_Dvc_Type_Grp_Nm
# This is an example of the parameter passed via the API:
# {'name':'predict1', 'mojo':'1','mab':{'class':'mabone', 'epsilon':0.5},'dbparam':true, lookup:{key:'msisdn',value:849999330}, param:{key:'in_recharge', value:9}}
# predictor.post.lookup={'database':'cassandra','table':'ecosystem.values','fields':'parameters'}



## ======================================================================================================================
## Campaign Configuration: eStore Offers Campaign includes settings for REST API fs extraction
## ======================================================================================================================
#predictor.name=estore_recommender
#
#user.data=/Users/ecosystem/data/vodacom/eStoreOffers/
#user.generated.models=/Users/ecosystem/data/vodacom/eStoreOffers/models/
#
## Plugin Loader for Pre- and post-scoring logic or interventions
#plugin.prescore=com.ecosystem.plugin.customer.PrePredictCustomer
#plugin.postscore=com.ecosystem.plugin.customer.PostScoreEStore
#
## MOJO keys are loaded into memory and be reloaded with the /reload endpoint
## The sequence is important as first model in list is referenced 1, and second as 2 etc.
##mojo.key=balance_enquiry_postpaid_offers_20200315.1_2020-04-01.zip,balance_enquiry_prepaid_offers_20200315.1_2020-04-01.zip
#mojo.key=estore_gsm_recommender_all_offers_2020_05_07.zip
#
## Features
## set default params to retrieve if key fails with lookup:{key:'msisdn',value:123}
## change value:123 to the default key from the feature store
#
#predictor.param.lookup={predictor:'estore_recommender',mojo:1,database:'cassandra',db:'',table:'ecosystem.estore_gsm_featurestore',lookup:{key:'msisdn',value:123},result:{parm1:'field1', parm2:'field2'}}
##predictor.param.lookup={predictor:'estore_recommender',mojo:1,db:'-noData -u user -p pass http://localhost:8091/getCassandra?type=c&sql=select * from ecosystem.estore_gsm_featurestore where {key}={value}',database:'rest',table:'',lookup:{key:'msisdn',value:123},result:{parm1:'field1', parm2:'field2'}}
##predictor.param.lookup={predictor:'estore_recommender',mojo:1,database:'mongodb',db:'vodacom',table:'estore_gsm_featurestore',lookup:{key:'msisdn',value:123},result:{parm1:'field1', parm2:'field2'}}
#
#predictor.param.lookup.features=aa_rch_cnt,aa_rch_days,aa_rch_pct,aa_rch_rev,active_day_segment,all_revenue_inc_vat,avg_aa_spnd,avg_data_bndl_spnd,avg_fi_spnd,avg_incm_calls_pw,avg_int_bndl_spnd,avg_oth_spnd,avg_outgng_calls_pw,avg_recharge_spnd,avg_rt_spnd,avg_voice_bndl_spnd,bndl_phr_cnt_l30,bndl_phr_val_l30,bndl_tckt_cnt_l30,bndl_tckt_val_l30,bndl_wa_cnt_l30,bndl_wa_val_l30,build_date,bundle_usage_segment,conn_day,customer_segment,daily_data_usage_avg,daily_voice_usage_avg,data_active_days,data_adv_rev,data_advance_active_days,data_advance_bndl_cnt,data_alloc_mb,data_behav_seg,data_bundl_alloc_cnt,data_bundle_cnt_0_50mb,data_bundle_cnt_1024_2048mb,data_bundle_cnt_2048_5120mb,data_bundle_cnt_250_500mb,data_bundle_cnt_500_1024mb,data_bundle_cnt_50_250mb,data_bundle_cnt_5120mb_plus,data_burn_rate,data_ib_rev,data_rev_status,data_spnd_pct,data_usage_l30d,data_usg_status,days_snc_lst_actvy,days_snc_lst_data_pch,days_snc_lst_int_pch,days_snc_lst_sms_pch,days_snc_lst_voice_pch,fi_bndl_pct,fi_data_ib_rev,fi_rch_cnt,fi_rch_days,fi_rch_pct,fi_rch_rev,fi_voice_ib_rev,ib_mb,ib_min,ib_pct,int_data_alloc_mb,int_data_bundl_alloc_cnt,int_ib_mb,int_ib_min,int_spnd_pct,int_voice_alloc_mins,int_voice_bundl_alloc_cnt,integrated_bundl_alloc_cnt,integrated_ib_rev,jfu_all_bndl_rev,jfu_bndl_count,jfu_data_bndl_count,jfu_data_bndl_rev,jfu_ratio,jfu_voice_bndl_cnt,jfu_voice_bndl_rev,jfy_eng_ind,l30_activity_flag,last_active_dt,last_data_pch_dt,last_int_pch_dt,last_rch_dt,last_sms_pch_dt,last_voice_pch_dt,mdn_data_pchs_per_day,mdn_days_btw_dt_pch,mdn_days_btw_int_pch,mdn_days_btw_voice_pch,mdn_int_pchs_per_day,mdn_voice_pchs_per_day,minutes_l30d,msisdn_range,num_active_days,num_incm_calls_l4w,num_incm_msg_l4w,num_otgng_calls_l4w,num_otgng_msg_l4w,num_sms_l30d,offnet_num_incm_calls_l4w,offnet_num_incm_msg_l4w,offnet_num_otgng_calls_l4w,offnet_num_otgng_msg_l4w,oob_data_rev,oob_mb,oob_min,oob_voice_rev,oth_rch_cnt,oth_rch_days,oth_rch_rev,paid_data_bndl_alloc_cnt,paid_voice_bndl_alloc,payment_method_code,pc022,pc023,pc024,pc026,pc027,pc028,pc031,pc032,pc033,pc035,pc045,pc046,pc048,pc055,pc072,pc080,pc086,pc091,pc092,pc094,pc097,pc160,pc161,pc162,pc163,pc164,pcnt_inc_calls_l4w,pcnt_offnet_out_calls_l4w,pmt_meth_cd,price_adjustment_factor,rchgs_cnt_l30,rchgs_val_l30,rt_rch_cnt,rt_rch_days,rt_rch_rev,sms_alloc,sms_bundl_alloc_cnt,sms_ib_rev,stretch_factor,tenure_group,tenure_mths_cnt,tot_calls,total_rev_l30d,unique_data_alloc_days,unique_data_bundles,unique_data_pch_days,unique_integrated_bundles,unique_integrated_pch_days,unique_sms_bundles,unique_sms_pch_days,unique_voice_alloc_days,unique_voice_bundles,unique_voice_pch_days,url_usage_pct,vodabuck_burn_factor,vodabuck_conversion_rate,voice_active_days,voice_alloc_mins,voice_behav_seg,voice_bundl_alloc_cnt,voice_bundle_cnt_0_10min,voice_bundle_cnt_10_20min,voice_bundle_cnt_120plus_min,voice_bundle_cnt_20_30min,voice_bundle_cnt_30_45min,voice_bundle_cnt_45_60min,voice_bundle_cnt_60_120min,voice_burn_rate,voice_ib_rev,voice_rev_status,voice_spnd_pct,voice_usg_status
## Cold-start: Use the default setting when feature store lookup fails and lookup key fails/or not present
#predictor.param.lookup.default={"unique_data_alloc_days":0,"pc086":0,"ib_pct":0,"avg_outgng_calls_pw":0,"data_bundle_cnt_1024_2048mb":0,"jfu_data_bndl_count":0,"subs_id":123,"daily_voice_usage_avg":0,"last_data_pch_dt":"1998-12-31T22:00:00Z","pc080":0,"paid_voice_bndl_alloc":0,"unique_integrated_bundles":0,"mdn_voice_pchs_per_day":0,"last_active_dt":"1998-12-31T22:00:00Z","offnet_num_incm_msg_l4w":0,"voice_spnd_pct":0,"data_usage_l30d":0,"int_ib_mb":0,"rt_rch_rev":0,"voice_bundle_cnt_120plus_min":0,"data_ib_rev":0,"num_active_days":0,"pc094":0,"pc097":0,"rt_rch_cnt":0,"num_sms_l30d":0,"msisdn_range":0,"rt_rch_days":0,"num_otgng_calls_l4w":0,"rchgs_cnt_l30":0,"pc091":0,"bndl_wa_val_l30":0,"pc092":0,"days_snc_lst_data_pch":100,"build_date":20200420,"aa_rch_rev":0,"data_bundle_cnt_250_500mb":0,"all_revenue_inc_vat":0,"avg_recharge_spnd":0,"avg_voice_bndl_spnd":0,"int_voice_alloc_mins":0,"fi_rch_pct":0,"jfy_eng_ind":"","fi_rch_cnt":0,"last_int_pch_dt":"1998-12-31T22:00:00Z","voice_bundle_cnt_30_45min":0,"active_day_segment":"Data Unkwn","bndl_tckt_cnt_l30":0,"oth_rch_cnt":0,"mdn_days_btw_dt_pch":0,"price_adjustment_factor":0,"jfu_bndl_count":0,"data_bundle_cnt_2048_5120mb":0,"sms_ib_rev":0,"voice_bundl_alloc_cnt":0,"unique_sms_pch_days":0,"voice_active_days":0,"unique_integrated_pch_days":0,"stretch_factor":1,"msisdn":0,"bndl_phr_val_l30":0,"mdn_data_pchs_per_day":0,"pc072":0,"data_bundle_cnt_5120mb_plus":0,"offnet_num_incm_calls_l4w":0,"unique_voice_alloc_days":0,"unique_voice_pch_days":0,"last_sms_pch_dt":"1998-12-31T22:00:00Z","data_bundle_cnt_50_250mb":0,"days_snc_lst_voice_pch":100,"bndl_phr_cnt_l30":0,"data_usg_status":"UNKNOWN","customer_segment":"ST_01","mdn_int_pchs_per_day":0,"voice_bundle_cnt_45_60min":0,"aa_rch_days":0,"oob_voice_rev":0,"aa_rch_pct":0,"fi_bndl_pct":0,"unique_sms_bundles":0,"voice_bundle_cnt_20_30min":0,"offnet_num_otgng_msg_l4w":0,"rchgs_val_l30":0,"fi_rch_rev":0,"sms_alloc":0,"pc160":0,"pc161":0,"jfu_all_bndl_rev":0,"pc162":0,"voice_alloc_mins":0,"voice_burn_rate":0,"fi_data_ib_rev":0,"pc163":0,"mdn_days_btw_int_pch":0,"pc164":0,"sms_bundl_alloc_cnt":0,"data_advance_active_days":0,"num_incm_calls_l4w":0,"pc045":0,"pc046":0,"voice_bundle_cnt_10_20min":0,"voice_rev_status":"UNKNOWN","voice_usg_status":"UNKNOWN","days_snc_lst_int_pch":100,"unique_voice_bundles":0,"data_burn_rate":0,"fi_voice_ib_rev":0,"voice_ib_rev":0,"data_bundl_alloc_cnt":0,"ib_mb":0,"int_data_bundl_alloc_cnt":0,"url_usage_pct":0,"avg_fi_spnd":0,"ib_min":0,"int_voice_bundl_alloc_cnt":0,"mdn_days_btw_voice_pch":0,"pmt_meth_cd":"P","unique_data_bundles":0,"pcnt_offnet_out_calls_l4w":0,"bndl_tckt_val_l30":0,"avg_int_bndl_spnd":0,"jfu_voice_bndl_rev":0,"pc055":0,"data_active_days":0,"days_snc_lst_sms_pch":100,"voice_bundle_cnt_60_120min":0,"data_bundle_cnt_0_50mb":0,"vodabuck_burn_factor":0,"avg_oth_spnd":0,"data_alloc_mb":0,"oth_rch_rev":0,"daily_data_usage_avg":0,"pcnt_inc_calls_l4w":0,"last_voice_pch_dt":"1998-12-31T22:00:00Z","pc048":0,"data_bundle_cnt_500_1024mb":0,"offnet_num_otgng_calls_l4w":0,"voice_behav_seg":"UNKNOWN","avg_rt_spnd":0,"num_incm_msg_l4w":0,"int_ib_min":0,"bundle_usage_segment":"","integrated_ib_rev":0,"payment_method_code":"p","pc022":0,"unique_data_pch_days":0,"oob_mb":0,"pc023":0,"l30_activity_flag":0,"pc024":0,"oth_rch_days":0,"total_rev_l30d":0,"data_behav_seg":"UNKNOWN","data_rev_status":"UNKNOWN","tenure_group":"NO KNOWN","aa_rch_cnt":0,"jfu_ratio":0,"avg_incm_calls_pw":0,"minutes_l30d":0,"int_spnd_pct":0,"oob_min":0,"tot_calls":0,"data_adv_rev":0,"conn_day":1855,"jfu_data_bndl_rev":0,"days_snc_lst_actvy":100,"pc031":0,"voice_bundle_cnt_0_10min":0,"pc032":0,"pc033":0,"vodabuck_conversion_rate":0.1,"pc035":0,"avg_aa_spnd":0,"avg_data_bndl_spnd":0,"data_advance_bndl_cnt":0,"num_otgng_msg_l4w":0,"fi_rch_days":0,"int_data_alloc_mb":0,"integrated_bundl_alloc_cnt":0,"last_rch_dt":"1998-12-31T22:00:00Z","bndl_wa_cnt_l30":0,"oob_data_rev":0,"data_spnd_pct":0,"jfu_voice_bndl_cnt":0,"pc026":0,"pc027":0,"paid_data_bndl_alloc_cnt":0,"pc028":0,"tenure_mths_cnt":0}
## Offer matrix: will be pre-loaded for performance purposes. Offers per offer_number and value range for selection purposes.
##predictor.offer.matrix={database:'cassandra',db:'', table:'ecosystem.estore_gsm_offer_matrix_release'}
#predictor.offer.matrix={database:'mongodb',db:'vodacom', table:'estore_gsm_offer_matrix_release_20200527'}
##predictor.offer.matrix={database:'mongodb',db:'vodacom', table:'estore_gsm_offer_matrix_release'}
#
## Model selection is used to decide on which model to use based on a value from a database.
##predictor.selector.setup={db:'',database:'cassandra',table:'ecosystem.balance_enquiry_fs',lookup:{key:'msisdn',value:123,fields:'payment_method_code'}}
##predictor.selector.model={'C':[1],'P':[2]}
#
## Budget matrix tracker is used to store actual response values against two dimensions and a date range
## Create supporting index to allow for fact extraction:
##    db.ProductStrategyBudget.createIndex({CalendarFrom:1, offer_type:1, cop_car:1})
##    Keywords to access feature store and offer matrix: offer_matrix.<field> and features.<field>
##predictor.offer.budget={name:'estore_recommender',database:'mongodb',db:'logging',table:'estore_recommender_budget'}
##predictor.offer.budget.params={name:'estore_recommender',description:'This budget is set for cop_car by offer type.',date_from:'2020-05-06',date_to:'2020-05-30',date_from_name:'CalendarFrom',date_to_name:'CalendarTo',x_name:'customer_segment',x_name_source:'customer_segment',y_name:'offer_counter_group',y_name_source:'offer_matrix.offer_counter_group',number:'Number', number_source:'result.offer_value',group_description:'GroupDescription',generate_if_empty:true}
#
## White list feature
##    whitelist table: customer_key, white_list of offers comma separated
## example cassandra setup of whitelist:
##    CREATE TABLE ecosystem.estore_recommender_whitelist(customer_key BIGINT, white_list list<text>, PRIMARY KEY(customer_key));
##    INSERT INTO ecosystem.estore_recommender_whitelist(customer_key,white_list) VALUES (27768089168,['URL_203_A','GSM_57_A','URL_3083_A']);
##    select white_list from ecosystem.estore_recommender_whitelist where customer_key=27768089168;
##predictor.whitelist.lookup={name:'estore_recommender',database:'cassandra',db:'',table:'ecosystem.estore_recommender_whitelist'}
##predictor.whitelist.logicin=true


## ======================================================================================================================
## Campaign Configuration: Balance Enquiry Campaign
## ======================================================================================================================
## Kerberos Security
##java.security.krb5.realm=SERVER.LOCALHOST
##java.security.krb5.kdc=server.localhost
##jass.config.donotprompt=true
##jass.config.refreshkrb5config=true
###jass.config.krb5loginmodule=
##jass.config.usekeytab=true
##jass.config.storekey=true
##jass.config.keytab=krb5.keytab
##jass.config.principal=jayvanzyl@SERVER.LOCALHOST
## Kerberos for KAFKA
## -Djava.security.auth.login.config=kafka_client_jaas.conf
## -Djava.security.krb5.conf=/etc/kafka/krb5.conf
## java -Djava.security.auth.login.config=/home/ctadmin/kafka-jaas.conf -Djava.security.krb5.conf=/etc/krb5.conf -Djavax.security.auth.useSubjectCredsOnly=true -cp kafka-testing-0.0.1-jar-with-dependencies.jar com.ct.test.kafka.KafkaProducer
##
#
#predictor.name=balance_enquiry
#
## ssl connection
## kafka driver must support kerberos and ssl
## jass settings
##
##kafka.logging={'topic':'zaf_bdp_eairuntime_contact_dev', 'topic_response':'zaf_bdp_eairuntime_contact_dev', 'bootstrap.servers': 'pbdpk01zafsrh.vodacom.corp:9093','receive.message.max.bytes': 200000000, 'security.protocol': 'SASL_SSL','sasl.kerberos.principal': 'bdpzafdisceairuntime','sasl.kerberos.keytab': '/app/eai/keytabs/bdpzafdisceairuntime.keytab','sasl.mechanisms': 'GSSAPI','ssl.truststore.location':'/app/eai/software/jdk/lib/security/jssecacerts','ssl.truststore.password': 'changeit','sasl.kerberos.service.name': 'kafka','sasl.jaas.config':'com.sun.security.auth.module.Krb5LoginModule required doNotPrompt=true useKeyTab=true keyTab="/app/eai/keytabs/bdpzafdisceairuntime.keytab" principal="bdpzafdisceairuntime";','ssl.endpoint.identification.algorithm':'https'}
#
#user.data=/Users/ecosystem/data/vodacom/BalanceEnquiry/
#user.generated.models=/Users/ecosystem/data/vodacom/BalanceEnquiry/models/
#
## Plugin Loader for Pre- and post-scoring logic or interventions
#plugin.prescore=com.ecosystem.plugin.customer.PrePredictCustomer
#plugin.postscore=com.ecosystem.plugin.customer.PostScoreBalanceEnquiry
#
## MOJO keys are loaded into memory and be reloaded with the /reload endpoint
## The sequence is important as first model in list is referenced 1, and second as 2 etc.
##mojo.key=balance_enquiry_postpaid_offers_20200315.1_2020-04-01.zip,balance_enquiry_prepaid_offers_20200315.1_2020-04-01.zip
#mojo.key=balance_enquiry_postpaid_rf.zip,balance_enquiry_prepaid_rf.zip
#
## Features
##predictor.param.lookup={predictor:'balance_enquiry',mojo:1,db:'',database:'cassandra',table:'ecosystem.balance_enquiry_fs',lookup:{key:'msisdn',value:123},result:{parm1:'field1', parm2:'field2'}}
##predictor.param.lookup={predictor:'balance_enquiry',mojo:1,db:'-noData -u user -p pass http://localhost:8091/getCassandra?type=c&sql=select * from ecosystem.balance_enquiry_fs where {key}={value}',database:'rest',table:'',lookup:{key:'msisdn',value:123},result:{parm1:'field1', parm2:'field2'}}
#predictor.param.lookup={predictor:'balance_enquiry',mojo:1,db:'vodacom',database:'mongodb',table:'balance_enquiry_fs2',lookup:{key:'msisdn',value:123},result:{parm1:'field1', parm2:'field2'}}
#predictor.param.lookup.features=msisdn,active_days,age,avg_rchgsrevmth,avg_rchgsrevperrchg,avg_subs_rvnu_amt,consumer_enterprise_ind,curr_arrs_flg,curr_dvc_clssfctn_lvl1_cd,daily_data_usage_avg,daily_voice_usage_avg,data_offers_accepted_count,databundle_cnt,dataib_mb,dataib_revenue,dataoob_mb,dataoob_rev,datarefill,no_airtime_advances,no_data_advances,payment_method_code,pc022,pc023,pc024,pc026,pc027,pc028_add_pc031_div_pc086,pc028_div_pc072,pc031_div_pc080,pc032,pc033,pc035,pc045,pc046,pc048,pc055,pc091,pc091_add_pc092,pc092,pc097,pc160,pc161,pc162,pc163,pc164,pmt_meth_cd,price_pln_type_desc,psd_mo_lst_actvy_days_cnt,rchrgs_alloc_in_vat_amt,rchrgs_cnt,sms_mo_lst_actvy_days_cnt,subs_id,tel_mo_lst_actvy_days_cnt,tenure_mths_cnt,tot_advances,tot_loan_advance,tot_loan_airtime_advance,tot_loan_data_advance,tot_offers_accepted_count,totbundle_cnt,totib_revenue,totoob_revenue,value_segment_band,voice_offers_accepted_count,voicebundle_cnt,voiceib_min,voiceib_revenue,voiceoob_min,voiceoob_rev,zero_bal_day_cnt
#
## Offer matrix: will be pre-loaded for performance purposes. Offers per offer_number and value range for selection purposes.
##predictor.offer.matrix={database:'mongodb',db:'vodacom', table:'balance_enq_offer_matrix'}
#
## Model selection is used to decide on which model to use based on a value from a database.
##predictor.selector.setup={db:'',database:'cassandra',table:'ecosystem.balance_enquiry_fs',lookup:{key:'msisdn',value:123,fields:'payment_method_code'}}
#predictor.selector.setup={db:'vodacom',database:'mongodb',table:'balance_enquiry_fs2',lookup:{key:'msisdn',value:123,fields:'payment_method_code'}}
#predictor.selector.model={'C':[1],'P':[2]}
#
## Budget matrix tracker is used to store actual response values against two dimensions and a date range
## Create supporting index to allow for fact extraction:
##       db.ProductStrategyBudget.createIndex({CalendarFrom:1, offer_type:1, cop_car:1})
## Hidden keywords to access feature store and offer matrix: offer_matrix.<field> and features.<field>
#predictor.offer.budget={name:'budget_tracker',database:'mongodb',db:'logging',table:'budget_tracker_budget'}
#predictor.offer.budget.params={name:'budget_tracker',description:'This budget is set for cop_car by offer type.',date_from:'2020-04-09',date_to:'2020-04-11',date_from_name:'CalendarFrom',date_to_name:'CalendarTo',x_name:'offer_type',x_name_source:'offer_matrix.offer_type',y_name:'cop_car',y_name_source:'offer_matrix.cop_car',number:'Number', number_source:'result.offer_value',group_description:'GroupDescription',generate_if_empty:true}
##predictor.offer.budget={name:'budget_tracker_product',database:'mongodb',db:'logging',table:'ProductCOPBudget'}
##predictor.offer.budget.params={name:'budget_tracker_product',description:'This budget is set for cop_car by offer type.',date_from:'2020-04-09',date_to:'2020-04-11',date_from_name:'CalendarFrom',date_to_name:'CalendarTo',x_name:'offer_name_final',x_name_source:'offer_matrix.offer_name_final',y_name:'cop_car',y_name_source:'offer_matrix.cop_car',number:'Number', number_source:'result.offer_value',group_description:'GroupDescription',generate_if_empty:true}
#
## White list feature
##    whitelist table: customer_key, white_list of offers comma separated
## example cassandra setup of whitelist:
##    CREATE TABLE ecosystem.estore_recommender_whitelist(customer_key BIGINT, white_list list<text>, PRIMARY KEY(customer_key));
##    INSERT INTO ecosystem.estore_recommender_whitelist(customer_key,white_list) VALUES (27768089168,['URL_203_A','GSM_57_A','URL_3083_A']);
##    select white_list from ecosystem.estore_recommender_whitelist where customer_key=27768089168;
#predictor.whitelist.lookup={name:'balance_enquiry',database:'mongodb',db:'vodacom',table:'balance_enquiry_whitelist'}
#predictor.whitelist.logicin=true
##predictor.corpora=[{name:'gift_weight',database:'mongodb',db:'vodacom',table:'gift_weight',key:'CG_UID'}]


## ======================================================================================================================
## Campaign Configuration: app_splashpage_20200213 Campaign
## ======================================================================================================================
#project.description=app_splashpage_20200213
#project.version=5.7.0.2
#logging.level=4
#tmp.dir=./
#cross.origin=demo.ecosystem.ai
#
#date.format=yyyy-MM-dd'T'HH:mm:ss.SSSSSSXXX
#
####################################################################################################################
## Logging
####################################################################################################################
#logger.level=500
#
####################################################################################################################
## PRESTO
## Default Presto settings
##presto.url=jdbc:presto://localhost:8084/
##presto.connection=cassandra/system_schema?user=cassandra
####################################################################################################################
#presto.url=jdbc:presto://localhost:8084/
#presto.connection=mongodb/genesys_gia.features?user=root
#
####################################################################################################################
## MONGO CONFIGURATION
## MongoDB Logfile params
####################################################################################################################
#mongo.secure.data=true
#mongo.ecosystem.user=eai
#mongo.ecosystem.password=ZYC5AdU9tqDV7gAx
#mongo.authentication.source=admin
#
#mongo.port=27017
##mongo.server=pbdpr03zafsrh.vodacom.corp
##mongo.server=pbdpr01zafsrh.vodacom.corp
#mongo.server=pbdpr01zatcrh.vodacom.corp
#mongo.connect=mongodb://eai:ZYC5AdU9tqDV7gAx@pbdpr01zatcrh.vodacom.corp:27017,pbdpr02zatcrh.vodacom.corp:27017,pbdpr03zatcrh.vodacom.corp:27017,pbdpr01zafsrh.vodacom.corp:27017,pbdpr02zafsrh.vodacom.corp:27017/?authSource=admin&replicaSet=ecosystemai-prod
#logging.database=eaimetrics_deploy
##logging.database=eaimetrics
#logging.collection=ecosystemruntime
#logging.collection.response=ecosystemruntime_response
#
####################################################################################################################
## PLUGIN LOADER
## Plugin Loader for Pre- and post-scoring logic or interventions
## plugin.prescore=
## plugin.postscore=com.ecosystem.plugin.customer.PostScoreOffers
## plugin.postscore=com.ecosystem.plugin.customer.PostScoreBalanceEnquiry
####################################################################################################################
#plugin.postscore=com.ecosystem.plugin.customer.PostScoreBalanceEnquiry
#
####################################################################################################################
## CAMPAIGN CONFIGURATION
## Balance Enquiry Campaign
####################################################################################################################
#user.data=../data/
#user.generated.models=../models/
#
####################################################################################################################
## CAMPAIGN MODEL / MOJO CONFIGURATION
## MOJO keys are loaded into memory and be reloaded with the /reload endpoint
## The sequence is important as first model in list is referenced 1, and second as 2 etc.
####################################################################################################################
#mojo.key=splashpage_prepaid.zip,splashpage_prepaid.zip
#
####################################################################################################################
## CAMPAIGN MODEL SELECTION
## Model selection is used to decide on which model to use based on a value from a database.
####################################################################################################################
#predictor.selector.setup={database:'cassandra',db:'',table:'prod_app_splash.fs_score_all_app_splash_page',lookup:{key:'msisdn',value:123,fields:'payment_method_code'}}
#predictor.selector.model={'C':[1],'P':[2]}
#
####################################################################################################################
## CAMPAIGN FEATURES - FEATURE LOOKUP
##
## if lookup uses one lookup value then:
##    lookup:{key:'msisdn',value:'827010119'}
## if lookup requires more stacked lookup
##    lookup:[{key:'msisdn',value:'827010119','operator':'AND'}, {key:'value',value:66.50}]
####################################################################################################################
#predictor.param.lookup={predictor:'app_splashpage_20200213',mojo:1,database:'cassandra',db:'',table:'prod_app_splash.fs_score_all_app_splash_page',lookup:{key:'msisdn',value:123},result:{parm1:'field1', parm2:'field2'}}
##predictor.param.lookup={predictor:'balance_enquiry_20200213',mojo:1,database:'cassandra',db:'',table:'prod_balance_enquiry.fs_score_all_balance_enquiry_testing',lookup:{key:'msisdn',value:123},result:{parm1:'field1', parm2:'field2'}}
#predictor.param.lookup.features=aa_rch_cnt,aa_rch_days,aa_rch_pct,aa_rch_rev,active_day_segment,all_revenue_inc_vat,avg_aa_spnd,avg_data_bndl_spnd,avg_fi_spnd,avg_incm_calls_pw,avg_int_bndl_spnd,avg_oth_spnd,avg_outgng_calls_pw,avg_recharge_spnd,avg_rt_spnd,avg_voice_bndl_spnd,bndl_phr_cnt_l30,bndl_phr_val_l30,bndl_tckt_cnt_l30,bndl_tckt_val_l30,bndl_wa_cnt_l30,bndl_wa_val_l30,build_date,bundle_usage_segment,conn_day,daily_data_usage_avg,daily_voice_usage_avg,data_active_days,data_adv_rev,data_advance_active_days,data_advance_bndl_cnt,data_alloc_mb,data_behav_seg,data_bundl_alloc_cnt,data_bundle_cnt_0_50mb,data_bundle_cnt_1024_2048mb,data_bundle_cnt_2048_5120mb,data_bundle_cnt_250_500mb,data_bundle_cnt_500_1024mb,data_bundle_cnt_50_250mb,data_bundle_cnt_5120mb_plus,data_burn_rate,data_ib_rev,data_rev_status,data_spnd_pct,data_usage_l30d,data_usg_status,days_snc_lst_actvy,days_snc_lst_data_pch,days_snc_lst_int_pch,days_snc_lst_sms_pch,days_snc_lst_voice_pch,fi_bndl_pct,fi_data_ib_rev,fi_rch_cnt,fi_rch_days,fi_rch_pct,fi_rch_rev,fi_voice_ib_rev,ib_mb,ib_min,ib_pct,int_data_alloc_mb,int_data_bundl_alloc_cnt,int_ib_mb,int_ib_min,int_spnd_pct,int_voice_alloc_mins,int_voice_bundl_alloc_cnt,integrated_bundl_alloc_cnt,integrated_ib_rev,jfu_all_bndl_rev,jfu_bndl_count,jfu_data_bndl_count,jfu_data_bndl_rev,jfu_ratio,jfu_voice_bndl_cnt,jfu_voice_bndl_rev,jfy_eng_ind,l30_activity_flag,mdn_data_pchs_per_day,mdn_days_btw_dt_pch,mdn_days_btw_int_pch,mdn_days_btw_voice_pch,mdn_int_pchs_per_day,mdn_voice_pchs_per_day,minutes_l30d,num_active_days,num_incm_calls_l4w,num_incm_msg_l4w,num_otgng_calls_l4w,num_otgng_msg_l4w,num_sms_l30d,offnet_num_incm_calls_l4w,offnet_num_incm_msg_l4w,offnet_num_otgng_calls_l4w,offnet_num_otgng_msg_l4w,oob_data_rev,oob_mb,oob_min,oob_voice_rev,oth_rch_cnt,oth_rch_days,oth_rch_rev,paid_data_bndl_alloc_cnt,paid_voice_bndl_alloc,payment_method_code,pcnt_inc_calls_l4w,pcnt_offnet_out_calls_l4w,pmt_meth_cd,rchgs_cnt_l30,rchgs_val_l30,rt_rch_cnt,rt_rch_days,rt_rch_rev,sms_alloc,sms_bundl_alloc_cnt,sms_ib_rev,subs_id,tenure_group,tenure_mths_cnt,tot_calls,total_rev_l30d,unique_data_alloc_days,unique_data_bundles,unique_data_pch_days,unique_integrated_bundles,unique_integrated_pch_days,unique_sms_bundles,unique_sms_pch_days,unique_voice_alloc_days,unique_voice_bundles,unique_voice_pch_days,url_usage_pct,voice_active_days,voice_alloc_mins,voice_behav_seg,voice_bundl_alloc_cnt,voice_bundle_cnt_0_10min,voice_bundle_cnt_10_20min,voice_bundle_cnt_120plus_min,voice_bundle_cnt_20_30min,voice_bundle_cnt_30_45min,voice_bundle_cnt_45_60min,voice_bundle_cnt_60_120min,voice_burn_rate,voice_ib_rev,voice_rev_status,voice_spnd_pct,voice_usg_status,pc022,pc023,pc024,pc026,pc027,pc028_add_pc031_div_pc086,pc028_div_pc072,pc031_div_pc080,pc032,pc033,pc035,pc045,pc046,pc048,pc055,pc091,pc091_add_pc092,pc092,pc097,pc160,pc161,pc162,pc163,pc164
#
####################################################################################################################
## CAMPAIGN OFFERS - OFFER LOOKUP
## Offer matrix: will be pre-loaded for performance purposes. Offers per offer_number and value range for selection purposes.
##
## Example:
## predictor.offer.matrix={database:'cassandra',table:'prod_balance_enquiry.balance_enquiry_offer_matrix'}
#######
#predictor.offer.matrix={database:'cassandra',db:'',table:'prod_app_splash.splash_page_offer_matrix'}
#
####################################################################################################################
## WHITELIST FEATURE
## White list feature
##    whitelist table: customer_key, white_list of offers comma separated
## example cassandra setup of whitelist:
##    CREATE TABLE ecosystem.estore_recommender_whitelist(customer_key BIGINT, white_list list<text>, PRIMARY KEY(customer_key));
##    INSERT INTO ecosystem.estore_recommender_whitelist(customer_key,white_list) VALUES (27768089168,['URL_203_A','GSM_57_A','URL_3083_A']);
##    select white_list from ecosystem.estore_recommender_whitelist where customer_key=27768089168;
####################################################################################################################
##predictor.whitelist.lookup={name:'splashpage',database:'cassandra',db:'',table:'prod_app_splash.app_splash_whitelist'}
#predictor.whitelist.lookup={name:'splashpage',database:'cassandra',db:'',table:'prod_balance_enquiry.balance_enquiry_whitelist'}
#predictor.whitelist.logicin=true
#
####################################################################################################################
## CAMPAIGN SCORING ENGINE CONFIGURATION
####################################################################################################################
#predictor.epsilon=0.1
#
####################################################################################################################
## Offer Caching
## Setting defaults for scoring engine, timeout (in seconds) is the amount of time to cache offers (0 to disable) and
## default epsilon can be enabled per case.
####################################################################################################################
#predictor.offercache=0
#
####################################################################################################################
## Presentation Pattern
## Use this setting to define a offer presentation pattern
## If it's set then offers will be presented based on sequence.
####################################################################################################################
#predictor.pattern=1,2,3,5,8,13,21,34,55,89,144,233,377,610,987,1597,2584,4181,6765,10946,17711,28657
#predictor.patternduration=259200000


## ======================================================================================================================
## Campaign Configuration: Gifting Recommender Campaign
## ======================================================================================================================
#predictor.name=gifting_recommender_free
#
## Map to S3 or EFS
#user.data=/Users/ecosystem/data/vodacom/eStoreOffers/
#user.generated.models=/Users/ecosystem/data/vodacom/eStoreOffers/models/
#
## Plugin Loader for Pre- and post-scoring logic or interventions
#plugin.prescore=com.ecosystem.plugin.customer.PrePredictCustomer
#plugin.postscore=com.ecosystem.plugin.customer.PostScoreGiftsFree
#
## MOJO keys are loaded into memory and be reloaded with the /reload endpoint
## The sequence is important as first model in list is referenced 1, and second as 2 etc.
##mojo.key=balance_enquiry_postpaid_offers_20200315.1_2020-04-01.zip,balance_enquiry_prepaid_offers_20200315.1_2020-04-01.zip
#mojo.key=estore_gsm_recommender_all_offers_2020_05_07.zip
#
## Features
## set default params to retrieve if key fails with lookup:{key:'msisdn',value:123}
## change value:123 to the default key from the feature store
#predictor.param.lookup={predictor:'gifting_recommender_free',mojo:1,database:'mongodb',db:'vodacom',table:'fs_score_all_estore_gsm_recommender_rel_1_1',lookup:{key:'msisdn',value:123},result:{parm1:'field1', parm2:'field2'}}
##predictor.param.lookup={predictor:'gifting_recommender_free',mojo:1,database:'cassandra',db:'',table:'ecosystem.fs_score_all_estore_gsm_recommender_rel_1_1',lookup:{key:'msisdn',value:123},result:{parm1:'field1', parm2:'field2'}}
##predictor.param.lookup={predictor:'gifting_recommender_free',mojo:1,db:'-noData -u user -p pass http://localhost:8091/getCassandra?type=c&sql=select * from ecosystem.fs_score_all_estore_gsm_recommender_rel_1_1 where {key}={value}',database:'rest',table:'',lookup:{key:'msisdn',value:123},result:{parm1:'field1', parm2:'field2'}}
#
##predictor.param.lookup={predictor:'gifting_recommender',mojo:1,database:'mongodb',db:'vodacom',table:'estore_gsm_featurestore',lookup:{key:'msisdn',value:123},result:{parm1:'field1', parm2:'field2'}}
#predictor.param.lookup.features=msisdn,aa_rch_cnt,aa_rch_days,aa_rch_pct,aa_rch_rev,active_day_segment,all_revenue_inc_vat,avg_aa_spnd,avg_data_bndl_spnd,avg_fi_spnd,avg_incm_calls_pw,avg_int_bndl_spnd,avg_oth_spnd,avg_outgng_calls_pw,avg_recharge_spnd,avg_rt_spnd,avg_voice_bndl_spnd,bndl_phr_cnt_l30,bndl_phr_val_l30,bndl_tckt_cnt_l30,bndl_tckt_val_l30,bndl_wa_cnt_l30,bndl_wa_val_l30,build_date,bundle_usage_segment,cg_uid,conn_day,customer_segment,daily_data_usage_avg,daily_voice_usage_avg,data_active_days,data_adv_rev,data_advance_active_days,data_advance_bndl_cnt,data_alloc_mb,data_behav_seg,data_bundl_alloc_cnt,data_bundle_cnt_0_50mb,data_bundle_cnt_1024_2048mb,data_bundle_cnt_2048_5120mb,data_bundle_cnt_250_500mb,data_bundle_cnt_500_1024mb,data_bundle_cnt_50_250mb,data_bundle_cnt_5120mb_plus,data_burn_rate,data_ib_rev,data_rev_status,data_spnd_pct,data_usage_l30d,data_usg_status,days_snc_lst_actvy,days_snc_lst_data_pch,days_snc_lst_int_pch,days_snc_lst_sms_pch,days_snc_lst_voice_pch,fi_bndl_pct,fi_data_ib_rev,fi_rch_cnt,fi_rch_days,fi_rch_pct,fi_rch_rev,fi_voice_ib_rev,gifts_free,gifts_free_tokens,gifts_free_upsize,ib_mb,ib_min,ib_pct,int_data_alloc_mb,int_data_bundl_alloc_cnt,int_ib_mb,int_ib_min,int_spnd_pct,int_voice_alloc_mins,int_voice_bundl_alloc_cnt,integrated_bundl_alloc_cnt,integrated_ib_rev,jfu_all_bndl_rev,jfu_bndl_count,jfu_data_bndl_count,jfu_data_bndl_rev,jfu_ratio,jfu_voice_bndl_cnt,jfu_voice_bndl_rev,jfy_eng_ind,l30_activity_flag,last_active_dt,last_data_pch_dt,last_int_pch_dt,last_rch_dt,last_sms_pch_dt,last_voice_pch_dt,mdn_data_pchs_per_day,mdn_days_btw_dt_pch,mdn_days_btw_int_pch,mdn_days_btw_voice_pch,mdn_int_pchs_per_day,mdn_voice_pchs_per_day,minutes_l30d,msisdn_range,num_active_days,num_incm_calls_l4w,num_incm_msg_l4w,num_otgng_calls_l4w,num_otgng_msg_l4w,num_sms_l30d,offnet_num_incm_calls_l4w,offnet_num_incm_msg_l4w,offnet_num_otgng_calls_l4w,offnet_num_otgng_msg_l4w,oob_data_rev,oob_mb,oob_min,oob_voice_rev,oth_rch_cnt,oth_rch_days,oth_rch_rev,paid_data_bndl_alloc_cnt,paid_voice_bndl_alloc,payment_method_code,pc022,pc023,pc024,pc026,pc027,pc028,pc031,pc032,pc033,pc035,pc045,pc046,pc048,pc055,pc072,pc080,pc086,pc091,pc092,pc094,pc097,pc100,pc102,pc103,pc112,pc114,pc118,pc120,pc121,pc124,pc126,pc127,pc136,pc138,pc139,pc142,pc145,pc148,pc150,pc151,pc160,pc161,pc162,pc163,pc164,pc169,pc170,pc173,pc174,pc175,pc176,pc183,pc185,pc186,pc187,pc189,pc191,pc192,pc193,pcnt_inc_calls_l4w,pcnt_offnet_out_calls_l4w,pd_uid,pmt_meth_cd,price_adjustment_factor,rchgs_cnt_l30,rchgs_val_l30,rt_rch_cnt,rt_rch_days,rt_rch_rev,sms_alloc,sms_bundl_alloc_cnt,sms_ib_rev,stretch_factor,subs_id,tenure_group,tenure_mths_cnt,tot_calls,total_rev_l30d,unique_data_alloc_days,unique_data_bundles,unique_data_pch_days,unique_integrated_bundles,unique_integrated_pch_days,unique_sms_bundles,unique_sms_pch_days,unique_voice_alloc_days,unique_voice_bundles,unique_voice_pch_days,url_usage_pct,vodabuck_burn_factor,vodabuck_conversion_rate,vodabucks_gift_primary,vodabucks_gift_secondary,voice_active_days,voice_alloc_mins,voice_behav_seg,voice_bundl_alloc_cnt,voice_bundle_cnt_0_10min,voice_bundle_cnt_10_20min,voice_bundle_cnt_120plus_min,voice_bundle_cnt_20_30min,voice_bundle_cnt_30_45min,voice_bundle_cnt_45_60min,voice_bundle_cnt_60_120min,voice_burn_rate,voice_ib_rev,voice_rev_status,voice_spnd_pct,voice_usg_status
## Cold-start: Use the default setting when feature store lookup fails and lookup key fails/or not present
#predictor.param.lookup.default={"unique_data_alloc_days":0,"pc086":0,"ib_pct":0,"avg_outgng_calls_pw":0,"data_bundle_cnt_1024_2048mb":0,"jfu_data_bndl_count":0,"subs_id":123,"daily_voice_usage_avg":0,"last_data_pch_dt":"1998-12-31T22:00:00Z","pc080":0,"paid_voice_bndl_alloc":0,"unique_integrated_bundles":0,"mdn_voice_pchs_per_day":0,"last_active_dt":"1998-12-31T22:00:00Z","offnet_num_incm_msg_l4w":0,"voice_spnd_pct":0,"data_usage_l30d":0,"int_ib_mb":0,"rt_rch_rev":0,"voice_bundle_cnt_120plus_min":0,"data_ib_rev":0,"num_active_days":0,"pc094":0,"pc097":0,"rt_rch_cnt":0,"num_sms_l30d":0,"msisdn_range":0,"rt_rch_days":0,"num_otgng_calls_l4w":0,"rchgs_cnt_l30":0,"pc091":0,"bndl_wa_val_l30":0,"pc092":0,"days_snc_lst_data_pch":100,"build_date":20200420,"aa_rch_rev":0,"data_bundle_cnt_250_500mb":0,"all_revenue_inc_vat":0,"avg_recharge_spnd":0,"avg_voice_bndl_spnd":0,"int_voice_alloc_mins":0,"fi_rch_pct":0,"jfy_eng_ind":"","fi_rch_cnt":0,"last_int_pch_dt":"1998-12-31T22:00:00Z","voice_bundle_cnt_30_45min":0,"active_day_segment":"Data Unkwn","bndl_tckt_cnt_l30":0,"oth_rch_cnt":0,"mdn_days_btw_dt_pch":0,"price_adjustment_factor":0,"jfu_bndl_count":0,"data_bundle_cnt_2048_5120mb":0,"sms_ib_rev":0,"voice_bundl_alloc_cnt":0,"unique_sms_pch_days":0,"voice_active_days":0,"unique_integrated_pch_days":0,"stretch_factor":1,"msisdn":0,"bndl_phr_val_l30":0,"mdn_data_pchs_per_day":0,"pc072":0,"data_bundle_cnt_5120mb_plus":0,"offnet_num_incm_calls_l4w":0,"unique_voice_alloc_days":0,"unique_voice_pch_days":0,"last_sms_pch_dt":"1998-12-31T22:00:00Z","data_bundle_cnt_50_250mb":0,"days_snc_lst_voice_pch":100,"bndl_phr_cnt_l30":0,"data_usg_status":"UNKNOWN","customer_segment":"ST_01","mdn_int_pchs_per_day":0,"voice_bundle_cnt_45_60min":0,"aa_rch_days":0,"oob_voice_rev":0,"aa_rch_pct":0,"fi_bndl_pct":0,"unique_sms_bundles":0,"voice_bundle_cnt_20_30min":0,"offnet_num_otgng_msg_l4w":0,"rchgs_val_l30":0,"fi_rch_rev":0,"sms_alloc":0,"pc160":0,"pc161":0,"jfu_all_bndl_rev":0,"pc162":0,"voice_alloc_mins":0,"voice_burn_rate":0,"fi_data_ib_rev":0,"pc163":0,"mdn_days_btw_int_pch":0,"pc164":0,"sms_bundl_alloc_cnt":0,"data_advance_active_days":0,"num_incm_calls_l4w":0,"pc045":0,"pc046":0,"voice_bundle_cnt_10_20min":0,"voice_rev_status":"UNKNOWN","voice_usg_status":"UNKNOWN","days_snc_lst_int_pch":100,"unique_voice_bundles":0,"data_burn_rate":0,"fi_voice_ib_rev":0,"voice_ib_rev":0,"data_bundl_alloc_cnt":0,"ib_mb":0,"int_data_bundl_alloc_cnt":0,"url_usage_pct":0,"avg_fi_spnd":0,"ib_min":0,"int_voice_bundl_alloc_cnt":0,"mdn_days_btw_voice_pch":0,"pmt_meth_cd":"P","unique_data_bundles":0,"pcnt_offnet_out_calls_l4w":0,"bndl_tckt_val_l30":0,"avg_int_bndl_spnd":0,"jfu_voice_bndl_rev":0,"pc055":0,"data_active_days":0,"days_snc_lst_sms_pch":100,"voice_bundle_cnt_60_120min":0,"data_bundle_cnt_0_50mb":0,"vodabuck_burn_factor":0,"avg_oth_spnd":0,"data_alloc_mb":0,"oth_rch_rev":0,"daily_data_usage_avg":0,"pcnt_inc_calls_l4w":0,"last_voice_pch_dt":"1998-12-31T22:00:00Z","pc048":0,"data_bundle_cnt_500_1024mb":0,"offnet_num_otgng_calls_l4w":0,"voice_behav_seg":"UNKNOWN","avg_rt_spnd":0,"num_incm_msg_l4w":0,"int_ib_min":0,"bundle_usage_segment":"","integrated_ib_rev":0,"payment_method_code":"p","pc022":0,"unique_data_pch_days":0,"oob_mb":0,"pc023":0,"l30_activity_flag":0,"pc024":0,"oth_rch_days":0,"total_rev_l30d":0,"data_behav_seg":"UNKNOWN","data_rev_status":"UNKNOWN","tenure_group":"NO KNOWN","aa_rch_cnt":0,"jfu_ratio":0,"avg_incm_calls_pw":0,"minutes_l30d":0,"int_spnd_pct":0,"oob_min":0,"tot_calls":0,"data_adv_rev":0,"conn_day":1855,"jfu_data_bndl_rev":0,"days_snc_lst_actvy":100,"pc031":0,"voice_bundle_cnt_0_10min":0,"pc032":0,"pc033":0,"vodabuck_conversion_rate":0.1,"pc035":0,"avg_aa_spnd":0,"avg_data_bndl_spnd":0,"data_advance_bndl_cnt":0,"num_otgng_msg_l4w":0,"fi_rch_days":0,"int_data_alloc_mb":0,"integrated_bundl_alloc_cnt":0,"last_rch_dt":"1998-12-31T22:00:00Z","bndl_wa_cnt_l30":0,"oob_data_rev":0,"data_spnd_pct":0,"jfu_voice_bndl_cnt":0,"pc026":0,"pc027":0,"paid_data_bndl_alloc_cnt":0,"pc028":0,"tenure_mths_cnt":0}
#
## Offer matrix: will be pre-loaded for performance purposes. Offers per offer_number and value range for selection purposes.
#predictor.offer.matrix={database:'mongodb',db:'vodacom', table:'vodacom_gift_catelogue', key:'id'}
## THIS IS FOR TESTING ONLY:
##predictor.offer.matrix={database:'cassandra',db:'', table:'ecosystem.estore_gsm_offer_matrix_release', key:'offer_treatment_code'}
#
## Model selection is used to decide on which model to use based on a value from a database.
##predictor.selector.setup={db:'',database:'cassandra',table:'ecosystem.balance_enquiry_fs',lookup:{key:'msisdn',value:123,fields:'payment_method_code'}}
##predictor.selector.model={'C':[1],'P':[2]}
#
## Budget matrix tracker is used to store actual response values against two dimensions and a date range
## Create supporting index to allow for fact extraction:
##    db.ProductStrategyBudget.createIndex({CalendarFrom:1, offer_type:1, cop_car:1})
##    Keywords to access feature store and offer matrix: offer_matrix.<field> and features.<field>
##predictor.offer.budget={name:'gifting_recommender_free',database:'mongodb',db:'logging',table:'gifting_recommender_budget'}
##predictor.offer.budget.params={name:'gifting_recommender_free',description:'This budget is set for cop_car by offer type.',date_from:'2020-05-06',date_to:'2020-05-30',date_from_name:'CalendarFrom',date_to_name:'CalendarTo',x_name:'customer_segment',x_name_source:'customer_segment',y_name:'offer_counter_group',y_name_source:'offer_matrix.offer_counter_group',number:'Number', number_source:'result.offer_value',group_description:'GroupDescription',generate_if_empty:true}
#
## White list feature
##    whitelist table: customer_key, white_list of offers comma separated
## example cassandra setup of whitelist:
##    CREATE TABLE ecosystem.estore_recommender_whitelist(customer_key BIGINT, white_list list<text>, PRIMARY KEY(customer_key));
##    INSERT INTO ecosystem.estore_recommender_whitelist(customer_key,white_list) VALUES (27768089168,['URL_203_A','GSM_57_A','URL_3083_A']);
##    select white_list from ecosystem.estore_recommender_whitelist where customer_key=27768089168;
#predictor.whitelist.lookup={name:'gifting_recommender_free',database:'mongodb',db:'vodacom',table:'vodacom_gift_whitelist'}
#predictor.whitelist.logicin=true
#
### Load corpora by name
##
#predictor.corpora=[{name:'gift_weight',database:'mongodb',db:'vodacom',table:'gift_weight',key:'CG_UID'}]


# ======================================================================================================================
# Campaign Configuration: Gifting Recommender Campaign
# ======================================================================================================================
#predictor.name=gifting_recommender_purchased
#
#user.data=/Users/ecosystem/data/vodacom/eStoreOffers/
#user.generated.models=/Users/ecosystem/data/vodacom/eStoreOffers/models/
#
## Plugin Loader for Pre- and post-scoring logic or interventions
#plugin.prescore=com.ecosystem.plugin.customer.PrePredictCustomer
#plugin.postscore=com.ecosystem.plugin.customer.PostScoreGiftsPurchased
#
## MOJO keys are loaded into memory and be reloaded with the /reload endpoint
## The sequence is important as first model in list is referenced 1, and second as 2 etc.
##mojo.key=balance_enquiry_postpaid_offers_20200315.1_2020-04-01.zip,balance_enquiry_prepaid_offers_20200315.1_2020-04-01.zip
#mojo.key=estore_gsm_recommender_all_offers_2020_05_07.zip
#
## Features
## set default params to retrieve if key fails with lookup:{key:'msisdn',value:123}
## change value:123 to the default key from the feature store
#predictor.param.lookup={predictor:'gifting_recommender_purchased',mojo:1,database:'mongodb',db:'vodacom',table:'new_featurestore_gifts',lookup:{key:'msisdn',value:123},result:{parm1:'field1', parm2:'field2'}}
##predictor.param.lookup={predictor:'gifting_recommender_purchased',mojo:1,database:'cassandra',db:'',table:'ecosystem.estore_gsm_featurestore',lookup:{key:'msisdn',value:123},result:{parm1:'field1', parm2:'field2'}}
##predictor.param.lookup={predictor:'gifting_recommender',mojo:1,database:'mongodb',db:'vodacom',table:'estore_gsm_featurestore',lookup:{key:'msisdn',value:123},result:{parm1:'field1', parm2:'field2'}}
#predictor.param.lookup.features=msisdn,aa_rch_cnt,aa_rch_days,aa_rch_pct,aa_rch_rev,active_day_segment,all_revenue_inc_vat,pd_uid,avg_aa_spnd,avg_data_bndl_spnd,avg_fi_spnd,avg_incm_calls_pw,avg_int_bndl_spnd,avg_oth_spnd,avg_outgng_calls_pw,avg_recharge_spnd,avg_rt_spnd,avg_voice_bndl_spnd,bndl_phr_cnt_l30,bndl_phr_val_l30,bndl_tckt_cnt_l30,bndl_tckt_val_l30,bndl_wa_cnt_l30,bndl_wa_val_l30,build_date,bundle_usage_segment,conn_day,customer_segment,daily_data_usage_avg,daily_voice_usage_avg,data_active_days,data_adv_rev,data_advance_active_days,data_advance_bndl_cnt,data_alloc_mb,data_behav_seg,data_bundl_alloc_cnt,data_bundle_cnt_0_50mb,data_bundle_cnt_1024_2048mb,data_bundle_cnt_2048_5120mb,data_bundle_cnt_250_500mb,data_bundle_cnt_500_1024mb,data_bundle_cnt_50_250mb,data_bundle_cnt_5120mb_plus,data_burn_rate,data_ib_rev,data_rev_status,data_spnd_pct,data_usage_l30d,data_usg_status,days_snc_lst_actvy,days_snc_lst_data_pch,days_snc_lst_int_pch,days_snc_lst_sms_pch,days_snc_lst_voice_pch,fi_bndl_pct,fi_data_ib_rev,fi_rch_cnt,fi_rch_days,fi_rch_pct,fi_rch_rev,fi_voice_ib_rev,ib_mb,ib_min,ib_pct,int_data_alloc_mb,int_data_bundl_alloc_cnt,int_ib_mb,int_ib_min,int_spnd_pct,cg_uid,int_voice_alloc_mins,int_voice_bundl_alloc_cnt,integrated_bundl_alloc_cnt,integrated_ib_rev,jfu_all_bndl_rev,jfu_bndl_count,jfu_data_bndl_count,jfu_data_bndl_rev,jfu_ratio,jfu_voice_bndl_cnt,jfu_voice_bndl_rev,jfy_eng_ind,l30_activity_flag,last_active_dt,last_data_pch_dt,last_int_pch_dt,last_rch_dt,last_sms_pch_dt,last_voice_pch_dt,mdn_data_pchs_per_day,mdn_days_btw_dt_pch,mdn_days_btw_int_pch,mdn_days_btw_voice_pch,mdn_int_pchs_per_day,mdn_voice_pchs_per_day,minutes_l30d,msisdn_range,num_active_days,num_incm_calls_l4w,num_incm_msg_l4w,num_otgng_calls_l4w,num_otgng_msg_l4w,num_sms_l30d,offnet_num_incm_calls_l4w,offnet_num_incm_msg_l4w,offnet_num_otgng_calls_l4w,offnet_num_otgng_msg_l4w,oob_data_rev,oob_mb,oob_min,oob_voice_rev,oth_rch_cnt,oth_rch_days,oth_rch_rev,paid_data_bndl_alloc_cnt,paid_voice_bndl_alloc,payment_method_code,pc022,pc023,pc024,pc026,pc027,pc028,pc031,pc032,pc033,pc035,pc045,pc046,pc048,pc055,pc072,pc080,pc086,pc091,pc092,pc094,pc097,pc160,pc161,pc162,pc163,pc164,pcnt_inc_calls_l4w,pcnt_offnet_out_calls_l4w,pmt_meth_cd,price_adjustment_factor,rchgs_cnt_l30,rchgs_val_l30,rt_rch_cnt,rt_rch_days,rt_rch_rev,sms_alloc,sms_bundl_alloc_cnt,sms_ib_rev,stretch_factor,subs_id,tenure_group,tenure_mths_cnt,tot_calls,total_rev_l30d,unique_data_alloc_days,unique_data_bundles,unique_data_pch_days,unique_integrated_bundles,unique_integrated_pch_days,unique_sms_bundles,unique_sms_pch_days,unique_voice_alloc_days,unique_voice_bundles,unique_voice_pch_days,url_usage_pct,vodabuck_burn_factor,vodabuck_conversion_rate,voice_active_days,voice_alloc_mins,voice_behav_seg,voice_bundl_alloc_cnt,voice_bundle_cnt_0_10min,voice_bundle_cnt_10_20min,voice_bundle_cnt_120plus_min,voice_bundle_cnt_20_30min,voice_bundle_cnt_30_45min,voice_bundle_cnt_45_60min,voice_bundle_cnt_60_120min,voice_burn_rate,voice_ib_rev,voice_rev_status,voice_spnd_pct,voice_usg_status
## Cold-start: Use the default setting when feature store lookup fails and lookup key fails/or not present
#predictor.param.lookup.default={"unique_data_alloc_days":0,"pc086":0,"ib_pct":0,"avg_outgng_calls_pw":0,"data_bundle_cnt_1024_2048mb":0,"jfu_data_bndl_count":0,"subs_id":123,"daily_voice_usage_avg":0,"last_data_pch_dt":"1998-12-31T22:00:00Z","pc080":0,"paid_voice_bndl_alloc":0,"unique_integrated_bundles":0,"mdn_voice_pchs_per_day":0,"last_active_dt":"1998-12-31T22:00:00Z","offnet_num_incm_msg_l4w":0,"voice_spnd_pct":0,"data_usage_l30d":0,"int_ib_mb":0,"rt_rch_rev":0,"voice_bundle_cnt_120plus_min":0,"data_ib_rev":0,"num_active_days":0,"pc094":0,"pc097":0,"rt_rch_cnt":0,"num_sms_l30d":0,"msisdn_range":0,"rt_rch_days":0,"num_otgng_calls_l4w":0,"rchgs_cnt_l30":0,"pc091":0,"bndl_wa_val_l30":0,"pc092":0,"days_snc_lst_data_pch":100,"build_date":20200420,"aa_rch_rev":0,"data_bundle_cnt_250_500mb":0,"all_revenue_inc_vat":0,"avg_recharge_spnd":0,"avg_voice_bndl_spnd":0,"cg_uid":"","int_voice_alloc_mins":0,"fi_rch_pct":0,"jfy_eng_ind":"","fi_rch_cnt":0,"last_int_pch_dt":"1998-12-31T22:00:00Z","voice_bundle_cnt_30_45min":0,"active_day_segment":"Data Unkwn","bndl_tckt_cnt_l30":0,"oth_rch_cnt":0,"mdn_days_btw_dt_pch":0,"price_adjustment_factor":0,"jfu_bndl_count":0,"data_bundle_cnt_2048_5120mb":0,"sms_ib_rev":0,"voice_bundl_alloc_cnt":0,"unique_sms_pch_days":0,"voice_active_days":0,"unique_integrated_pch_days":0,"stretch_factor":1,"msisdn":0,"bndl_phr_val_l30":0,"mdn_data_pchs_per_day":0,"pc072":0,"data_bundle_cnt_5120mb_plus":0,"offnet_num_incm_calls_l4w":0,"unique_voice_alloc_days":0,"unique_voice_pch_days":0,"last_sms_pch_dt":"1998-12-31T22:00:00Z","data_bundle_cnt_50_250mb":0,"days_snc_lst_voice_pch":100,"bndl_phr_cnt_l30":0,"data_usg_status":"UNKNOWN","customer_segment":"ST_01","mdn_int_pchs_per_day":0,"voice_bundle_cnt_45_60min":0,"aa_rch_days":0,"oob_voice_rev":0,"aa_rch_pct":0,"fi_bndl_pct":0,"unique_sms_bundles":0,"voice_bundle_cnt_20_30min":0,"offnet_num_otgng_msg_l4w":0,"rchgs_val_l30":0,"fi_rch_rev":0,"sms_alloc":0,"pc160":0,"pc161":0,"jfu_all_bndl_rev":0,"pc162":0,"voice_alloc_mins":0,"voice_burn_rate":0,"fi_data_ib_rev":0,"pc163":0,"mdn_days_btw_int_pch":0,"pc164":0,"sms_bundl_alloc_cnt":0,"data_advance_active_days":0,"num_incm_calls_l4w":0,"pc045":0,"pc046":0,"voice_bundle_cnt_10_20min":0,"voice_rev_status":"UNKNOWN","voice_usg_status":"UNKNOWN","days_snc_lst_int_pch":100,"unique_voice_bundles":0,"data_burn_rate":0,"fi_voice_ib_rev":0,"voice_ib_rev":0,"data_bundl_alloc_cnt":0,"ib_mb":0,"int_data_bundl_alloc_cnt":0,"url_usage_pct":0,"avg_fi_spnd":0,"ib_min":0,"int_voice_bundl_alloc_cnt":0,"mdn_days_btw_voice_pch":0,"pmt_meth_cd":"P","unique_data_bundles":0,"pcnt_offnet_out_calls_l4w":0,"bndl_tckt_val_l30":0,"avg_int_bndl_spnd":0,"jfu_voice_bndl_rev":0,"pc055":0,"data_active_days":0,"days_snc_lst_sms_pch":100,"voice_bundle_cnt_60_120min":0,"data_bundle_cnt_0_50mb":0,"vodabuck_burn_factor":0,"avg_oth_spnd":0,"data_alloc_mb":0,"oth_rch_rev":0,"daily_data_usage_avg":0,"pcnt_inc_calls_l4w":0,"last_voice_pch_dt":"1998-12-31T22:00:00Z","pc048":0,"data_bundle_cnt_500_1024mb":0,"offnet_num_otgng_calls_l4w":0,"voice_behav_seg":"UNKNOWN","avg_rt_spnd":0,"num_incm_msg_l4w":0,"int_ib_min":0,"bundle_usage_segment":"","integrated_ib_rev":0,"payment_method_code":"p","pc022":0,"unique_data_pch_days":0,"oob_mb":0,"pc023":0,"l30_activity_flag":0,"pc024":0,"oth_rch_days":0,"total_rev_l30d":0,"data_behav_seg":"UNKNOWN","data_rev_status":"UNKNOWN","tenure_group":"NO KNOWN","aa_rch_cnt":0,"jfu_ratio":0,"avg_incm_calls_pw":0,"minutes_l30d":0,"int_spnd_pct":0,"oob_min":0,"tot_calls":0,"data_adv_rev":0,"conn_day":1855,"jfu_data_bndl_rev":0,"days_snc_lst_actvy":100,"pc031":0,"voice_bundle_cnt_0_10min":0,"pc032":0,"pc033":0,"vodabuck_conversion_rate":0.1,"pc035":0,"avg_aa_spnd":0,"avg_data_bndl_spnd":0,"data_advance_bndl_cnt":0,"num_otgng_msg_l4w":0,"fi_rch_days":0,"int_data_alloc_mb":0,"integrated_bundl_alloc_cnt":0,"last_rch_dt":"1998-12-31T22:00:00Z","bndl_wa_cnt_l30":0,"oob_data_rev":0,"data_spnd_pct":0,"jfu_voice_bndl_cnt":0,"pc026":0,"pc027":0,"paid_data_bndl_alloc_cnt":0,"pc028":0,"tenure_mths_cnt":0}
## Offer matrix: will be pre-loaded for performance purposes. Offers per offer_number and value range for selection purposes.
#predictor.offer.matrix={database:'mongodb',db:'vodacom', table:'vodacom_gift_catelogue', key:'id'}
#
## Model selection is used to decide on which model to use based on a value from a database.
##predictor.selector.setup={db:'',database:'cassandra',table:'ecosystem.balance_enquiry_fs',lookup:{key:'msisdn',value:123,fields:'payment_method_code'}}
##predictor.selector.model={'C':[1],'P':[2]}
#
## Budget matrix tracker is used to store actual response values against two dimensions and a date range
## Create supporting index to allow for fact extraction:
##    db.ProductStrategyBudget.createIndex({CalendarFrom:1, offer_type:1, cop_car:1})
##    Keywords to access feature store and offer matrix: offer_matrix.<field> and features.<field>
##predictor.offer.budget={name:'gifting_recommender_free',database:'mongodb',db:'logging',table:'gifting_recommender_budget'}
##predictor.offer.budget.params={name:'gifting_recommender_free',description:'This budget is set for cop_car by offer type.',date_from:'2020-05-06',date_to:'2020-05-30',date_from_name:'CalendarFrom',date_to_name:'CalendarTo',x_name:'customer_segment',x_name_source:'customer_segment',y_name:'offer_counter_group',y_name_source:'offer_matrix.offer_counter_group',number:'Number', number_source:'result.offer_value',group_description:'GroupDescription',generate_if_empty:true}
#
## White list feature
##    whitelist table: customer_key, white_list of offers comma separated
## example cassandra setup of whitelist:
##    CREATE TABLE ecosystem.estore_recommender_whitelist(customer_key BIGINT, white_list list<text>, PRIMARY KEY(customer_key));
##    INSERT INTO ecosystem.estore_recommender_whitelist(customer_key,white_list) VALUES (27768089168,['URL_203_A','GSM_57_A','URL_3083_A']);
##    select white_list from ecosystem.estore_recommender_whitelist where customer_key=27768089168;
#predictor.whitelist.lookup={name:'gifting_recommender_purchased',database:'mongodb',db:'vodacom',table:'vodacom_gift_whitelist'}
#predictor.whitelist.logicin=true
#
## Load corpora by name
##
#predictor.corpora=[{name:'gift_weight',database:'mongodb',db:'vodacom',table:'gift_weight',key:'CG_UID'}]


## ======================================================================================================================
## Campaign Configuration: estore_recommender_nongsm Campaign
## ======================================================================================================================
#predictor.name=estore_recommender_nongsm
#
#user.data=/Users/ecosystem/data/vodacom/eStoreOffers/
#user.generated.models=/Users/ecosystem/data/vodacom/eStoreOffers/models/
#
## Plugin Loader for Pre- and post-scoring logic or interventions
#plugin.prescore=com.ecosystem.plugin.customer.PrePredictCustomer
#plugin.postscore=com.ecosystem.plugin.customer.PostScoreEStoreNonGSM
#
## MOJO keys are loaded into memory and be reloaded with the /reload endpoint
## The sequence is important as first model in list is referenced 1, and second as 2 etc.
##mojo.key=balance_enquiry_postpaid_offers_20200315.1_2020-04-01.zip,balance_enquiry_prepaid_offers_20200315.1_2020-04-01.zip
#mojo.key=estore_gsm_recommender_all_offers_2020_05_07.zip
#
## Features
## set default params to retrieve if key fails with lookup:{key:'msisdn',value:123}
## change value:123 to the default key from the feature store
#predictor.param.lookup={predictor:'estore_recommender_nongsm',mojo:1,database:'cassandra',db:'',table:'ecosystem.estore_gsm_featurestore',lookup:{key:'msisdn',value:123},result:{parm1:'field1', parm2:'field2'}}
##predictor.param.lookup={predictor:'estore_recommender_nongsm',mojo:1,database:'mongodb',db:'vodacom',table:'estore_gsm_featurestore',lookup:{key:'msisdn',value:123},result:{parm1:'field1', parm2:'field2'}}
#predictor.param.lookup.features=msisdn,aa_rch_cnt,aa_rch_days,aa_rch_pct,aa_rch_rev,active_day_segment,all_revenue_inc_vat,avg_aa_spnd,avg_data_bndl_spnd,avg_fi_spnd,avg_incm_calls_pw,avg_int_bndl_spnd,avg_oth_spnd,avg_outgng_calls_pw,avg_recharge_spnd,avg_rt_spnd,avg_voice_bndl_spnd,bndl_phr_cnt_l30,bndl_phr_val_l30,bndl_tckt_cnt_l30,bndl_tckt_val_l30,bndl_wa_cnt_l30,bndl_wa_val_l30,build_date,bundle_usage_segment,conn_day,customer_segment,daily_data_usage_avg,daily_voice_usage_avg,data_active_days,data_adv_rev,data_advance_active_days,data_advance_bndl_cnt,data_alloc_mb,data_behav_seg,data_bundl_alloc_cnt,data_bundle_cnt_0_50mb,data_bundle_cnt_1024_2048mb,data_bundle_cnt_2048_5120mb,data_bundle_cnt_250_500mb,data_bundle_cnt_500_1024mb,data_bundle_cnt_50_250mb,data_bundle_cnt_5120mb_plus,data_burn_rate,data_ib_rev,data_rev_status,data_spnd_pct,data_usage_l30d,data_usg_status,days_snc_lst_actvy,days_snc_lst_data_pch,days_snc_lst_int_pch,days_snc_lst_sms_pch,days_snc_lst_voice_pch,fi_bndl_pct,fi_data_ib_rev,fi_rch_cnt,fi_rch_days,fi_rch_pct,fi_rch_rev,fi_voice_ib_rev,ib_mb,ib_min,ib_pct,int_data_alloc_mb,int_data_bundl_alloc_cnt,int_ib_mb,int_ib_min,int_spnd_pct,int_voice_alloc_mins,int_voice_bundl_alloc_cnt,integrated_bundl_alloc_cnt,integrated_ib_rev,jfu_all_bndl_rev,jfu_bndl_count,jfu_data_bndl_count,jfu_data_bndl_rev,jfu_ratio,jfu_voice_bndl_cnt,jfu_voice_bndl_rev,jfy_eng_ind,l30_activity_flag,last_active_dt,last_data_pch_dt,last_int_pch_dt,last_rch_dt,last_sms_pch_dt,last_voice_pch_dt,mdn_data_pchs_per_day,mdn_days_btw_dt_pch,mdn_days_btw_int_pch,mdn_days_btw_voice_pch,mdn_int_pchs_per_day,mdn_voice_pchs_per_day,minutes_l30d,msisdn_range,num_active_days,num_incm_calls_l4w,num_incm_msg_l4w,num_otgng_calls_l4w,num_otgng_msg_l4w,num_sms_l30d,offnet_num_incm_calls_l4w,offnet_num_incm_msg_l4w,offnet_num_otgng_calls_l4w,offnet_num_otgng_msg_l4w,oob_data_rev,oob_mb,oob_min,oob_voice_rev,oth_rch_cnt,oth_rch_days,oth_rch_rev,paid_data_bndl_alloc_cnt,paid_voice_bndl_alloc,payment_method_code,pc022,pc023,pc024,pc026,pc027,pc028,pc031,pc032,pc033,pc035,pc045,pc046,pc048,pc055,pc072,pc080,pc086,pc091,pc092,pc094,pc097,pc160,pc161,pc162,pc163,pc164,pcnt_inc_calls_l4w,pcnt_offnet_out_calls_l4w,pmt_meth_cd,price_adjustment_factor,rchgs_cnt_l30,rchgs_val_l30,rt_rch_cnt,rt_rch_days,rt_rch_rev,sms_alloc,sms_bundl_alloc_cnt,sms_ib_rev,stretch_factor,subs_id,tenure_group,tenure_mths_cnt,tot_calls,total_rev_l30d,unique_data_alloc_days,unique_data_bundles,unique_data_pch_days,unique_integrated_bundles,unique_integrated_pch_days,unique_sms_bundles,unique_sms_pch_days,unique_voice_alloc_days,unique_voice_bundles,unique_voice_pch_days,url_usage_pct,vodabuck_burn_factor,vodabuck_conversion_rate,voice_active_days,voice_alloc_mins,voice_behav_seg,voice_bundl_alloc_cnt,voice_bundle_cnt_0_10min,voice_bundle_cnt_10_20min,voice_bundle_cnt_120plus_min,voice_bundle_cnt_20_30min,voice_bundle_cnt_30_45min,voice_bundle_cnt_45_60min,voice_bundle_cnt_60_120min,voice_burn_rate,voice_ib_rev,voice_rev_status,voice_spnd_pct,voice_usg_status
## Cold-start: Use the default setting when feature store lookup fails and lookup key fails/or not present
#predictor.param.lookup.default={"unique_data_alloc_days":0,"pc086":0,"ib_pct":0,"avg_outgng_calls_pw":0,"data_bundle_cnt_1024_2048mb":0,"jfu_data_bndl_count":0,"subs_id":123,"daily_voice_usage_avg":0,"last_data_pch_dt":"1998-12-31T22:00:00Z","pc080":0,"paid_voice_bndl_alloc":0,"unique_integrated_bundles":0,"mdn_voice_pchs_per_day":0,"last_active_dt":"1998-12-31T22:00:00Z","offnet_num_incm_msg_l4w":0,"voice_spnd_pct":0,"data_usage_l30d":0,"int_ib_mb":0,"rt_rch_rev":0,"voice_bundle_cnt_120plus_min":0,"data_ib_rev":0,"num_active_days":0,"pc094":0,"pc097":0,"rt_rch_cnt":0,"num_sms_l30d":0,"msisdn_range":0,"rt_rch_days":0,"num_otgng_calls_l4w":0,"rchgs_cnt_l30":0,"pc091":0,"bndl_wa_val_l30":0,"pc092":0,"days_snc_lst_data_pch":100,"build_date":20200420,"aa_rch_rev":0,"data_bundle_cnt_250_500mb":0,"all_revenue_inc_vat":0,"avg_recharge_spnd":0,"avg_voice_bndl_spnd":0,"int_voice_alloc_mins":0,"fi_rch_pct":0,"jfy_eng_ind":"","fi_rch_cnt":0,"last_int_pch_dt":"1998-12-31T22:00:00Z","voice_bundle_cnt_30_45min":0,"active_day_segment":"Data Unkwn","bndl_tckt_cnt_l30":0,"oth_rch_cnt":0,"mdn_days_btw_dt_pch":0,"price_adjustment_factor":0,"jfu_bndl_count":0,"data_bundle_cnt_2048_5120mb":0,"sms_ib_rev":0,"voice_bundl_alloc_cnt":0,"unique_sms_pch_days":0,"voice_active_days":0,"unique_integrated_pch_days":0,"stretch_factor":1,"msisdn":0,"bndl_phr_val_l30":0,"mdn_data_pchs_per_day":0,"pc072":0,"data_bundle_cnt_5120mb_plus":0,"offnet_num_incm_calls_l4w":0,"unique_voice_alloc_days":0,"unique_voice_pch_days":0,"last_sms_pch_dt":"1998-12-31T22:00:00Z","data_bundle_cnt_50_250mb":0,"days_snc_lst_voice_pch":100,"bndl_phr_cnt_l30":0,"data_usg_status":"UNKNOWN","customer_segment":"ST_01","mdn_int_pchs_per_day":0,"voice_bundle_cnt_45_60min":0,"aa_rch_days":0,"oob_voice_rev":0,"aa_rch_pct":0,"fi_bndl_pct":0,"unique_sms_bundles":0,"voice_bundle_cnt_20_30min":0,"offnet_num_otgng_msg_l4w":0,"rchgs_val_l30":0,"fi_rch_rev":0,"sms_alloc":0,"pc160":0,"pc161":0,"jfu_all_bndl_rev":0,"pc162":0,"voice_alloc_mins":0,"voice_burn_rate":0,"fi_data_ib_rev":0,"pc163":0,"mdn_days_btw_int_pch":0,"pc164":0,"sms_bundl_alloc_cnt":0,"data_advance_active_days":0,"num_incm_calls_l4w":0,"pc045":0,"pc046":0,"voice_bundle_cnt_10_20min":0,"voice_rev_status":"UNKNOWN","voice_usg_status":"UNKNOWN","days_snc_lst_int_pch":100,"unique_voice_bundles":0,"data_burn_rate":0,"fi_voice_ib_rev":0,"voice_ib_rev":0,"data_bundl_alloc_cnt":0,"ib_mb":0,"int_data_bundl_alloc_cnt":0,"url_usage_pct":0,"avg_fi_spnd":0,"ib_min":0,"int_voice_bundl_alloc_cnt":0,"mdn_days_btw_voice_pch":0,"pmt_meth_cd":"P","unique_data_bundles":0,"pcnt_offnet_out_calls_l4w":0,"bndl_tckt_val_l30":0,"avg_int_bndl_spnd":0,"jfu_voice_bndl_rev":0,"pc055":0,"data_active_days":0,"days_snc_lst_sms_pch":100,"voice_bundle_cnt_60_120min":0,"data_bundle_cnt_0_50mb":0,"vodabuck_burn_factor":0,"avg_oth_spnd":0,"data_alloc_mb":0,"oth_rch_rev":0,"daily_data_usage_avg":0,"pcnt_inc_calls_l4w":0,"last_voice_pch_dt":"1998-12-31T22:00:00Z","pc048":0,"data_bundle_cnt_500_1024mb":0,"offnet_num_otgng_calls_l4w":0,"voice_behav_seg":"UNKNOWN","avg_rt_spnd":0,"num_incm_msg_l4w":0,"int_ib_min":0,"bundle_usage_segment":"","integrated_ib_rev":0,"payment_method_code":"p","pc022":0,"unique_data_pch_days":0,"oob_mb":0,"pc023":0,"l30_activity_flag":0,"pc024":0,"oth_rch_days":0,"total_rev_l30d":0,"data_behav_seg":"UNKNOWN","data_rev_status":"UNKNOWN","tenure_group":"NO KNOWN","aa_rch_cnt":0,"jfu_ratio":0,"avg_incm_calls_pw":0,"minutes_l30d":0,"int_spnd_pct":0,"oob_min":0,"tot_calls":0,"data_adv_rev":0,"conn_day":1855,"jfu_data_bndl_rev":0,"days_snc_lst_actvy":100,"pc031":0,"voice_bundle_cnt_0_10min":0,"pc032":0,"pc033":0,"vodabuck_conversion_rate":0.1,"pc035":0,"avg_aa_spnd":0,"avg_data_bndl_spnd":0,"data_advance_bndl_cnt":0,"num_otgng_msg_l4w":0,"fi_rch_days":0,"int_data_alloc_mb":0,"integrated_bundl_alloc_cnt":0,"last_rch_dt":"1998-12-31T22:00:00Z","bndl_wa_cnt_l30":0,"oob_data_rev":0,"data_spnd_pct":0,"jfu_voice_bndl_cnt":0,"pc026":0,"pc027":0,"paid_data_bndl_alloc_cnt":0,"pc028":0,"tenure_mths_cnt":0}
## Offer matrix: will be pre-loaded for performance purposes. Offers per offer_number and value range for selection purposes.
#predictor.offer.matrix={database:'mongodb',db:'vodacom', table:'estore_non_gsm_matrix'}

# Model selection is used to decide on which model to use based on a value from a database.
#predictor.selector.setup={db:'',database:'cassandra',table:'ecosystem.balance_enquiry_fs',lookup:{key:'msisdn',value:123,fields:'payment_method_code'}}
#predictor.selector.model={'C':[1],'P':[2]}

# Budget matrix tracker is used to store actual response values against two dimensions and a date range
# Create supporting index to allow for fact extraction:
#    db.ProductStrategyBudget.createIndex({CalendarFrom:1, offer_type:1, cop_car:1})
#    Keywords to access feature store and offer matrix: offer_matrix.<field> and features.<field>
#predictor.offer.budget={name:'estore_recommender_nongsm',database:'mongodb',db:'logging',table:'gifting_recommender_budget'}
#predictor.offer.budget.params={name:'estore_recommender_nongsm',description:'This budget is set for cop_car by offer type.',date_from:'2020-05-06',date_to:'2020-05-30',date_from_name:'CalendarFrom',date_to_name:'CalendarTo',x_name:'customer_segment',x_name_source:'customer_segment',y_name:'offer_counter_group',y_name_source:'offer_matrix.offer_counter_group',number:'Number', number_source:'result.offer_value',group_description:'GroupDescription',generate_if_empty:true}

# White list feature
#    whitelist table: customer_key, white_list of offers comma separated
# example cassandra setup of whitelist:
#    CREATE TABLE ecosystem.estore_recommender_whitelist(customer_key BIGINT, white_list list<text>, PRIMARY KEY(customer_key));
#    INSERT INTO ecosystem.estore_recommender_whitelist(customer_key,white_list) VALUES (27768089168,['URL_203_A','GSM_57_A','URL_3083_A']);
#    select white_list from ecosystem.estore_recommender_whitelist where customer_key=27768089168;
#predictor.whitelist.lookup={name:'estore_recommender_nongsm',database:'mongodb',db:'vodacom',table:'estore_recommender_whitelist'}
#predictor.whitelist.logicin=true


# ======================================================================================================================
# Campaign Configuration: Spending Personality Campaign
# ======================================================================================================================
#predictor.name=spending_personality
#
#user.data=/Users/ecosystem/data/fnb_2020_05/
#user.generated.models=/Users/ecosystem/data/fnb_2020_05/models/
#
## Plugin Loader for Pre- and post-scoring logic or interventions
#plugin.prescore=com.ecosystem.plugin.customer.PrePredictCustomer
#plugin.postscore=com.ecosystem.plugin.customer.PostScoreInterventionRecommender
##plugin.postscore=com.ecosystem.plugin.customer.PostScoreSpendingPersonality
#
## MOJO keys are loaded into memory and be reloaded with the /reload endpoint
## The sequence is important as first model in list is referenced 1, and second as 2 etc.
#mojo.key=GBM_5_AutoML_20200715_160601.zip
#
## Features
## set default params to retrieve if key fails with lookup:{key:'msisdn',value:123}
## change value:123 to the default key from the feature store
#predictor.param.lookup={predictor:'spending_personality',mojo:1,database:'mongodb',db:'fnb',table:'fnbPrismFeatureStore20201',lookup:{key:'CUST_NO',value:123},result:{parm1:'field1', parm2:'field2'}}
#predictor.param.lookup.features=personalityType,15428Spend,15696Spend,15313Spend,15313Frequency,CUST_REC_OPEN_DATE,ExperientialSpend,BOND_IND,5541Spend,RGN_CDE,CUST_AGE,Prepaid_BuyFrequency,15654Spend,TransfersFrequency,15691Frequency,CUST_TOT_DR_BALs,TransfersSpend,NO_WES_ACCT,15312Spend,6545Spend,15751Spend,15751Frequency,1FrequencyN,EssentialSpend,EMPLOYER_NAME,IntrovertSpend
## if type is set to dynamic, this set will be read everytime the api is called for scoring
## use the update=true if realtime propensity updates are required.
#predictor.corpora=[{name:'personality_intervention',database:'mongodb',db:'fnb',table:'spendScoreInterventions', type:'dynamic', update:true}]
## Budget matrix tracker is used to store actual response values against two dimensions and a date range
## Create supporting index to allow for fact extraction:
##    db.ProductStrategyBudget.createIndex({CalendarFrom:1, offer_type:1, cop_car:1})
##    Keywords to access feature store and offer matrix: offer_matrix.<field> and features.<field>
#predictor.offer.budget={name:'spending_personality',database:'mongodb',db:'logging',table:'spending_personality_tracker'}
#predictor.offer.budget.params={name:'spending_personality',description:'Tracking offers.',date_from:'2021-02-01',date_to:'2021-05-30',date_from_name:'CalendarFrom',date_to_name:'CalendarTo',x_name:'offer_name',x_name_source:'result.offer_name',y_name:'personality',y_name_source:'result.personality',number:'Number', number_source:'result.offer_value',group_description:'GroupDescription',generate_if_empty:true}

## ======================================================================================================================
## Campaign Configuration: partner_recommender Campaign
## ======================================================================================================================
#logging.level=4
#date.format=yyyy-MM-dd'T'HH:mm:ss.SSSSSSXXX
#logger.level=500
#mongo.secure.data=true
#mongo.ecosystem.user=ecosystem_user
#mongo.port=27017
#mongo.server=localhost
#mongo.ecosystem.password=EcoEco321
#mongo.connect=mongodb://ecosystem_user:EcoEco321@localhost:27017/?authSource=admin
#mongo.authentication.source=admin
#logging.database=logging
#logging.collection=ecosystemruntime
#logging.collection.response=ecosystemruntime_response
#logging.detail=false
#user.profiles=profilesMaster
#predictor.name=partner_recommender
#
#user.data=/Users/ecosystem/data/fnb/runtime-partner-recommender/
#user.generated.models=/Users/ecosystem/data/fnb/runtime-partner-recommender/
#
#plugin.prescore=com.ecosystem.plugin.customer.PrePredictCustomer
#plugin.postscore=com.ecosystem.plugin.customer.PostScoreInterventionRecommender
#
#mojo.key=GBM_1_AutoML_20210302_063834.zip,DRF_1_AutoML_20210302_070541.zip,GBM_1_AutoML_20210302_071729.zip,GBM_2_AutoML_20210302_094436.zip
#
#predictor.param.lookup={predictor:'partner_recommender',mojo:1,database:'mongodb',db:'fnb',table:'recommenderFeatureStore',lookup:{key:'cust_no',value:123},result:{parm1:'field1', parm2:'field2'}}
#predictor.param.lookup.features=cust_no,e15,e16,e17,e18,e19,e21,e22,e23,e24,e25,e26,e27,e28,PROP_OWNR_IND,CUST_NO_CHILD,MRTL_STAT_CDE,LANG_CDE,RGN_CDE,CUST_AGE,BOND_IND,NO_POST_ADDR,NO_RES_ADDR,HIGH_EDU_LVL,CUST_SEX_CDE,PRI_SUB_SEG,PRI_SEG,CUST_TOT_NO_PROD,personalityType,5411frequency,15309frequency,5411spend,15309spend,15428frequency,15428spend,Enthusiasticfrequency,Experientialfrequency,Industriousfrequency,Extrovertfrequency,Intentionalfrequency,Introvertfrequency,15301frequency,15301spend,15302frequency,15302spend,15303frequency,15303spend,15304frequency,15304spend,15305frequency,15305spend,15307frequency,15307spend,15308frequency,15308spend,15310frequency,15310spend,15311frequency,15311spend,15312frequency,15312spend,15313frequency,15313spend,15314frequency,15314spend,15317frequency,15317spend,15318frequency,15318spend,15320frequency,15320spend,Poetry,e15,e16,e17,e18,e19,e21,e22,e23,e24,e25,e26,e27,e28,PROP_OWNR_IND,CUST_NO_CHILD,MRTL_STAT_CDE,LANG_CDE,RGN_CDE,CUST_AGE,BOND_IND,NO_POST_ADDR,NO_RES_ADDR,HIGH_EDU_LVL,CUST_SEX_CDE,PRI_SUB_SEG,PRI_SEG,CUST_TOT_NO_PROD,personalityType,5411frequency,15309frequency,5411spend,15309spend,15428frequency,15428spend,Enthusiasticfrequency,Experientialfrequency,Industriousfrequency,Extrovertfrequency,Intentionalfrequency,Introvertfrequency,15301frequency,15301spend,15302frequency,15302spend,15303frequency,15303spend,15304frequency,15304spend,15305frequency,15305spend,15307frequency,15307spend,15308frequency,15308spend,15310frequency,15310spend,15311frequency,15311spend,15312frequency,15312spend,15313frequency,15313spend,15314frequency,15314spend,15317frequency,15317spend,15318frequency,15318spend,15320frequency,15320spend,Takealot,e15,e16,e17,e18,e19,e21,e22,e23,e24,e25,e26,e27,e28,PROP_OWNR_IND,CUST_NO_CHILD,MRTL_STAT_CDE,LANG_CDE,RGN_CDE,CUST_AGE,BOND_IND,NO_POST_ADDR,NO_RES_ADDR,HIGH_EDU_LVL,CUST_SEX_CDE,PRI_SUB_SEG,PRI_SEG,CUST_TOT_NO_PROD,personalityType,5411frequency,15309frequency,5411spend,15309spend,15428frequency,15428spend,Enthusiasticfrequency,Experientialfrequency,Industriousfrequency,Extrovertfrequency,Intentionalfrequency,Introvertfrequency,15301frequency,15301spend,15302frequency,15302spend,15303frequency,15303spend,15304frequency,15304spend,15305frequency,15305spend,15307frequency,15307spend,15308frequency,15308spend,15310frequency,15310spend,15311frequency,15311spend,15312frequency,15312spend,15313frequency,15313spend,15314frequency,15314spend,15317frequency,15317spend,15318frequency,15318spend,15320frequency,15320spend,MrD
#
#predictor.corpora=[{name:'personality_intervention',database:'mongodb',db:'fnb',table:'recommenderInterventions', type:'dynamic', update:true}]
#
#predictor.offercache=0
#predictor.epsilon=0.05
#
#predictor.offer.budget={name:'partner_recommender',database:'mongodb',db:'logging',table:'partner_recommender_tracker'}
#predictor.offer.budget.params={name:'partner_recommender',description:'Tracking offers.',date_from:'2021-03-01',date_to:'2021-03-14',date_from_name:'CalendarFrom',date_to_name:'CalendarTo',x_name:'offer_name',x_name_source:'result.offer_name',y_name:'PRI_SEG',y_name_source:'result.PRI_SEG',number:'Number', number_source:'result.offer_value',group_description:'GroupDescription',generate_if_empty:true}

# ======================================================================================================================
# Campaign Configuration: behavior_recommender Campaign
# ======================================================================================================================
logging.level=4
date.format=yyyy-MM-dd'T'HH:mm:ss.SSSSSSXXX
logger.level=500
mongo.secure.data=true
mongo.ecosystem.user=ecosystem_user
mongo.port=27017
mongo.server=localhost
mongo.ecosystem.password=EcoEco321
mongo.connect=mongodb://ecosystem_user:EcoEco321@localhost:27017/?authSource=admin
mongo.authentication.source=admin
logging.database=logging
logging.collection=ecosystemruntime
logging.collection.response=ecosystemruntime_response
logging.detail=false
user.profiles=ecosystem_meta
predictor.name=behavior_recommender

user.data=/Users/ecosystem/data/behavior/
user.generated.models=/Users/ecosystem/data/behavior/models/

plugin.prescore=com.ecosystem.plugin.customer.PrePredictCustomer
plugin.postscore=com.ecosystem.plugin.customer.PostScoreBehaviorRecommender

#mojo.key=gbm_personality.zip

predictor.param.lookup={predictor:'behavior_recommender',mojo:1,database:'mongodb',db:'behavior',table:'budget_messaging_featurestore',lookup:{key:'cust_no',value:123},result:{parm1:'field1', parm2:'field2'}}
predictor.param.lookup.features=cust_no,personality,segment,cto,gender,frequencyExtrovert,frequencyIntrovert,frequencyUncategorised

predictor.corpora=[{name:'behavior_intervention',database:'mongodb',db:'behavior',table:'wellnessInterventionThompson', type:'dynamic', update:true}]

predictor.offercache=0
predictor.epsilon=0.05

#predictor.offer.budget={name:'partner_recommender',database:'mongodb',db:'logging',table:'partner_recommender_tracker'}
#predictor.offer.budget.params={name:'partner_recommender',description:'Tracking offers.',date_from:'2021-03-01',date_to:'2021-03-14',date_from_name:'CalendarFrom',date_to_name:'CalendarTo',x_name:'offer_name',x_name_source:'result.offer_name',y_name:'PRI_SEG',y_name_source:'result.PRI_SEG',number:'Number', number_source:'result.offer_value',group_description:'GroupDescription',generate_if_empty:true}

## ======================================================================================================================
## Campaign Configuration: Financial Wellness Scoring Engine
## ======================================================================================================================
#predictor.name=financial_wellness
#
#user.data=/Users/ecosystem/data/fnb_2020_05/
#user.generated.models=/Users/ecosystem/data/fnb_2020_05/models/
#
## Plugin Loader for Pre- and post-scoring logic or interventions
#plugin.prescore=com.ecosystem.plugin.customer.PrePredictCustomer
#plugin.postscore=com.ecosystem.plugin.customer.PostScoreFinancialWellness
#
## MOJO keys are loaded into memory and be reloaded with the /reload endpoint
## The sequence is important as first model in list is referenced 1, and second as 2 etc.
#mojo.key=GBM_5_AutoML_20200715_160601.zip
#
## Features
## set default params to retrieve if key fails with lookup:{key:'msisdn',value:123}
## change value:123 to the default key from the feature store
#predictor.param.lookup={predictor:'financial_wellness',mojo:1,database:'mongodb',db:'fnb',table:'wellnessFeatureStore',lookup:{key:'CUST_NO',value:123},result:{parm1:'field1', parm2:'field2'}}
#predictor.param.lookup.features=CUST_NO,saveScore,rtiScore,prismScore,productiveSpendScore
## if type is set to dynamic, this set will be read everytime the api is called for scoring
#predictor.corpora=[{name:'wellness_score_methods',database:'mongodb',db:'fnb',table:'wellnessScoreMethods', type:'dynamic'}]


### ======================================================================================================================
### Campaign Configuration: Extroversion Recommender Campaign
## ======================================================================================================================
#predictor.name=extrovertion_recommender
#
#user.data=/Users/ecosystem/data/fnb_2020_05
#user.generated.models=/Users/jayvanzyl/Documents/Projects/ecosystem-ai-next/ecosystem-server-instances/fnb/models
#
## Plugin Loader for Pre- and post-scoring logic or interventions
#plugin.prescore=com.ecosystem.plugin.customer.PrePredictCustomer
#plugin.postscore=com.ecosystem.plugin.customer.PostScorePersonalityExtrovert
#
## MOJO keys are loaded into memory and be reloaded with the /reload endpoint
## The sequence is important as first model in list is referenced 1, and second as 2 etc.
#mojo.key=GBM_1_AutoML_20200627_151202.zip
#
## Features
## set default params to retrieve if key fails with lookup:{key:'msisdn',value:123}
## change value:123 to the default key from the feature store
#predictor.param.lookup={predictor:'extrovertion_recommender',mojo:1,database:'mongodb',db:'fnb_2020_05',table:'200625fnbFeatureStoreCC',lookup:{key:'CUST_NO',value:123},result:{parm1:'field1', parm2:'field2'}}
#predictor.param.lookup.features=PROP_OWNR_IND,CUST_DOB,CUST_INC_CDE,CUST_NO_CHILD,CUST_JUNK_MAIL_IND,CUST_CLS_DATE,CUST_BUS_EST_DATE,MRTL_CNTCT_IND,MRTL_ASS_REQ_IND,CUST_REC_OPEN_DATE,MTD_CR_INT_PD_AMT,MTD_DR_INT_RCV_AMT,CUST_CNTCT_TEL_NO,CUST_BUS_TEL_NO,CUST_OCPTN_CDE,MRTL_STAT_CDE,CUST_SEX_CDE,LANG_CDE,RACE_CDE,SIC_CDE,RSK_CAT_CDE,RSK_RSN_CDE,JNT_ACC_IND,CUST_TOT_NO_PROD,TOT_NO_SUBPROD,NO_EMPL_CDE,CUST_TOT_DR_BAL,CUST_TOT_CR_BAL,RGN_CDE,RES_ZIP_CDE,CUST_AGE,CUST_TYPE,NO_DDA_ACCT,NO_ILP_ACCT,NO_TDA_ACCT,CNTRY_PERM_RES,BOND_IND,DTI_CDE,EMPLOYER_NAME,NO_BANK_SERV,NO_POST_ADDR,NO_RES_ADDR,POS_RSK_IND,EMAIL_ADDR,CUST_CREDIT_LIMIT,KYC_IND,CONSENT_IND,INCOME_AMOUNT,SOCIAL_GRANT_IND,INCOME_ESTIMATE,PRI_SEG,PRI_SUB_SEG,MKT_POST,MKT_SMS,MKT_EMAIL,MKT_PHONE,MKT_CELL,DATE_GRAD,ACCT_LINK_IND,HIGH_EDU_LVL,GRAD_TYPE,GRAD_IND,DEBT_COUNSEL_IND,MKT_CR_FRB,NON_STD_RATE_IPH,CUST_AUTH_NO,SAL_IND,QUAL_SPECIALITY,PROOF_OF_DEGREE,SOC_IND,TURNOVER,PRIM_BUS,MKT_FNB,MKT_FRB_OTH,INC_EST_ACCURACY,ID_ISSUER,CUST_CELL_NO,NO_WES_ACCT,NO_ZFN_ACCT,SCHEME_IND,CNTRY_CTZNSHP,CNTRY_NATNLITY,CNTRY_ESTBLSHMNT,CNTRY_REG_HO,INCOME_AMT_DATE,INCOME_AMT_TIME,CIF_ADDR_VERIFY,CIF_ID_VERIFIED,totalFrequency,totalSpend,WedSpend,WedFrequency,UncategorisedSpend,UncategorisedFrequency,TueSpend,TueFrequency,ThuSpend,ThuFrequency,SunSpend,SunFrequency,SatSpend,SatFrequency,MonSpend,MonFrequency,IntrovertSpend,IntrovertFrequency,InterestSpend,InterestFrequency,IntentionalSpend,IntentionalFrequency,IndustriousSpend,IndustriousFrequency,FriSpend,FriFrequency,FeesSpend,FeesFrequency,ExtrovertSpend,ExtrovertFrequency,ExperientialSpend,ExperientialFrequency,EssentialSpend,EssentialFrequency,DiscretionarySpend,DiscretionaryFrequency,CardPurchaseSpend,CardPurchaseFrequency,6550Spend,6550Frequency,6544Spend,6544Frequency,6532Spend,6532Frequency,6010Spend,6010Frequency,5735Spend,5735Frequency,5-6Spend,5-6Frequency,5-3Spend,5-3Frequency,4Spend,4Frequency,4121Spend,4121Frequency,4-7Spend,4-7Frequency,4-6Spend,4-6Frequency,4-5Spend,4-5Frequency,4-4Spend,4-4Frequency,4-3Spend,4-3Frequency,4-2Spend,4-2Frequency,4-1Spend,4-1Frequency,3Spend,3Frequency,3-7Spend,3-7Frequency,3-6Spend,3-6Frequency,3-5Spend,3-5Frequency,3-4Spend,3-4Frequency,2Spend,2Frequency,2-7Spend,2-7Frequency,2-6Spend,2-6Frequency,2-2Spend,2-2Frequency,15751Spend,15751Frequency,15711Spend,15711Frequency,15667Spend,15667Frequency,15658Spend,15658Frequency,15594Spend,15594Frequency,15546Spend,15546Frequency,15450Spend,15450Frequency,15445Spend,15445Frequency,15423Spend,15423Frequency,15412Spend,15412Frequency,15320Spend,15320Frequency,15318Spend,15318Frequency,15316Spend,15316Frequency,15314Spend,15314Frequency,1-7Spend,1-7Frequency,1-5Spend,1-5Frequency,1-3Spend,1-3Frequency,1-2Spend,1-2Frequency,1-1Spend,1-1Frequency,0Spend,0Frequency,WedzWedSpend,WedzWedFrequency,WedzTueSpend,WedzTueFrequency,WedzThuSpend,WedzThuFrequency,WedzSunSpend,WedzSunFrequency,WedzSatSpend,WedzSatFrequency,WedzMonSpend,WedzMonFrequency,WedzIntrovertSpend,WedzIntrovertFrequency,WedzIntentionalSpend,WedzIntentionalFrequency,WedzIndustriousSpend,WedzIndustriousFrequency,WedzFriSpend,WedzFriFrequency,WedzEssentialSpend,WedzEssentialFrequency,WedzCardPurchaseSpend,WedzCardPurchaseFrequency,Wedz6550Spend,Wedz6550Frequency,Wedz6010Spend,Wedz6010Frequency,Wedz4121Spend,Wedz4121Frequency,Wedz4-4Spend,Wedz4-4Frequency,Wedz3Spend,Wedz3Frequency,Wedz3-4Spend,Wedz3-4Frequency,Wedz2Spend,Wedz2Frequency,Wedz15751Spend,Wedz15751Frequency,Wedz15711Spend,Wedz15711Frequency,Wedz15546Spend,Wedz15546Frequency,Wedz15423Spend,Wedz15423Frequency,Wedz15412Spend,Wedz15412Frequency,Wedz15318Spend,Wedz15318Frequency,Wedz15314Spend,Wedz15314Frequency,TuezWedSpend,TuezWedFrequency,TuezTueSpend,TuezTueFrequency,TuezThuSpend,TuezThuFrequency,TuezSunSpend,TuezSunFrequency,TuezSatSpend,TuezSatFrequency,TuezMonSpend,TuezMonFrequency,TuezIntrovertSpend,TuezIntrovertFrequency,TuezInterestSpend,TuezInterestFrequency,TuezIntentionalSpend,TuezIntentionalFrequency,TuezIndustriousSpend,TuezIndustriousFrequency,TuezFriSpend,TuezFriFrequency,TuezFeesSpend,TuezFeesFrequency,TuezExtrovertSpend,TuezExtrovertFrequency,TuezExperientialSpend,TuezExperientialFrequency,TuezEssentialSpend,TuezEssentialFrequency,TuezDiscretionarySpend,TuezDiscretionaryFrequency,TuezCardPurchaseSpend,TuezCardPurchaseFrequency,Tuez6550Spend,Tuez6550Frequency,Tuez6544Spend,Tuez6544Frequency,Tuez6532Spend,Tuez6532Frequency,Tuez6010Spend,Tuez6010Frequency,Tuez5735Spend,Tuez5735Frequency,Tuez5-3Spend,Tuez5-3Frequency,Tuez4Spend,Tuez4Frequency,Tuez4121Spend,Tuez4121Frequency,Tuez4-3Spend,Tuez4-3Frequency,Tuez3Spend,Tuez3Frequency,Tuez2Spend,Tuez2Frequency,Tuez15751Spend,Tuez15751Frequency,Tuez15711Spend,Tuez15711Frequency,Tuez15658Spend,Tuez15658Frequency,Tuez15594Spend,Tuez15594Frequency,Tuez15546Spend,Tuez15546Frequency,Tuez15445Spend,Tuez15445Frequency,Tuez15423Spend,Tuez15423Frequency,Tuez15412Spend,Tuez15412Frequency,Tuez15318Spend,Tuez15318Frequency,Tuez15316Spend,Tuez15316Frequency,Tuez15314Spend,Tuez15314Frequency,Tuez1-3Spend,Tuez1-3Frequency,ThuzWedSpend,ThuzWedFrequency,ThuzTueSpend,ThuzTueFrequency,ThuzThuSpend,ThuzThuFrequency,ThuzSunSpend,ThuzSunFrequency,ThuzSatSpend,ThuzSatFrequency,ThuzMonSpend,ThuzMonFrequency,ThuzIntrovertSpend,ThuzIntrovertFrequency,ThuzInterestSpend,ThuzInterestFrequency,ThuzIntentionalSpend,ThuzIntentionalFrequency,ThuzIndustriousSpend,ThuzIndustriousFrequency,ThuzFriSpend,ThuzFriFrequency,ThuzFeesSpend,ThuzFeesFrequency,ThuzExtrovertSpend,ThuzExtrovertFrequency,ThuzExperientialSpend,ThuzExperientialFrequency,ThuzEssentialSpend,ThuzEssentialFrequency,ThuzDiscretionarySpend,ThuzDiscretionaryFrequency,ThuzCardPurchaseSpend,ThuzCardPurchaseFrequency,Thuz6550Spend,Thuz6550Frequency,Thuz6544Spend,Thuz6544Frequency,Thuz6532Spend,Thuz6532Frequency,Thuz5735Spend,Thuz5735Frequency,Thuz4121Spend,Thuz4121Frequency,Thuz4-5Spend,Thuz4-5Frequency,Thuz3Spend,Thuz3Frequency,Thuz3-5Spend,Thuz3-5Frequency,Thuz2Spend,Thuz2Frequency,Thuz15751Spend,Thuz15751Frequency,Thuz15711Spend,Thuz15711Frequency,Thuz15658Spend,Thuz15658Frequency,Thuz15594Spend,Thuz15594Frequency,Thuz15445Spend,Thuz15445Frequency,Thuz15423Spend,Thuz15423Frequency,Thuz15412Spend,Thuz15412Frequency,Thuz15318Spend,Thuz15318Frequency,Thuz15316Spend,Thuz15316Frequency,Thuz15314Spend,Thuz15314Frequency,Thuz1-5Spend,Thuz1-5Frequency,SunzWedSpend,SunzWedFrequency,SunzUncategorisedSpend,SunzUncategorisedFrequency,SunzTueSpend,SunzTueFrequency,SunzThuSpend,SunzThuFrequency,SunzSunSpend,SunzSunFrequency,SunzSatSpend,SunzSatFrequency,SunzMonSpend,SunzMonFrequency,SunzIntrovertSpend,SunzIntrovertFrequency,SunzIndustriousSpend,SunzIndustriousFrequency,SunzFriSpend,SunzFriFrequency,SunzEssentialSpend,SunzEssentialFrequency,SunzCardPurchaseSpend,SunzCardPurchaseFrequency,Sunz4121Spend,Sunz4121Frequency,Sunz4-1Spend,Sunz4-1Frequency,Sunz3Spend,Sunz3Frequency,Sunz15711Spend,Sunz15711Frequency,Sunz15667Spend,Sunz15667Frequency,Sunz15450Spend,Sunz15450Frequency,Sunz15412Spend,Sunz15412Frequency,Sunz15320Spend,Sunz15320Frequency,Sunz15318Spend,Sunz15318Frequency,Sunz1-1Spend,Sunz1-1Frequency,Sunz0Spend,Sunz0Frequency,SatzWedSpend,SatzWedFrequency,SatzUncategorisedSpend,SatzUncategorisedFrequency,SatzTueSpend,SatzTueFrequency,SatzThuSpend,SatzThuFrequency,SatzSunSpend,SatzSunFrequency,SatzSatSpend,SatzSatFrequency,SatzMonSpend,SatzMonFrequency,SatzIntrovertSpend,SatzIntrovertFrequency,SatzIntentionalSpend,SatzIntentionalFrequency,SatzIndustriousSpend,SatzIndustriousFrequency,SatzFriSpend,SatzFriFrequency,SatzExtrovertSpend,SatzExtrovertFrequency,SatzExperientialSpend,SatzExperientialFrequency,SatzEssentialSpend,SatzEssentialFrequency,SatzDiscretionarySpend,SatzDiscretionaryFrequency,SatzCardPurchaseSpend,SatzCardPurchaseFrequency,Satz6550Spend,Satz6550Frequency,Satz5735Spend,Satz5735Frequency,Satz4Spend,Satz4Frequency,Satz4121Spend,Satz4121Frequency,Satz4-7Spend,Satz4-7Frequency,Satz3Spend,Satz3Frequency,Satz3-7Spend,Satz3-7Frequency,Satz2Spend,Satz2Frequency,Satz2-7Spend,Satz2-7Frequency,Satz15751Spend,Satz15751Frequency,Satz15711Spend,Satz15711Frequency,Satz15667Spend,Satz15667Frequency,Satz15658Spend,Satz15658Frequency,Satz15450Spend,Satz15450Frequency,Satz15445Spend,Satz15445Frequency,Satz15423Spend,Satz15423Frequency,Satz15412Spend,Satz15412Frequency,Satz15320Spend,Satz15320Frequency,Satz15318Spend,Satz15318Frequency,Satz15316Spend,Satz15316Frequency,Satz15314Spend,Satz15314Frequency,Satz1-7Spend,Satz1-7Frequency,Satz0Spend,Satz0Frequency,MonzWedSpend,MonzWedFrequency,MonzTueSpend,MonzTueFrequency,MonzThuSpend,MonzThuFrequency,MonzSunSpend,MonzSunFrequency,MonzSatSpend,MonzSatFrequency,MonzMonSpend,MonzMonFrequency,MonzIntrovertSpend,MonzIntrovertFrequency,MonzInterestSpend,MonzInterestFrequency,MonzIntentionalSpend,MonzIntentionalFrequency,MonzIndustriousSpend,MonzIndustriousFrequency,MonzFriSpend,MonzFriFrequency,MonzFeesSpend,MonzFeesFrequency,MonzEssentialSpend,MonzEssentialFrequency,MonzCardPurchaseSpend,MonzCardPurchaseFrequency,Monz6550Spend,Monz6550Frequency,Monz6544Spend,Monz6544Frequency,Monz6532Spend,Monz6532Frequency,Monz4121Spend,Monz4121Frequency,Monz4-2Spend,Monz4-2Frequency,Monz3Spend,Monz3Frequency,Monz2Spend,Monz2Frequency,Monz2-2Spend,Monz2-2Frequency,Monz15751Spend,Monz15751Frequency,Monz15711Spend,Monz15711Frequency,Monz15594Spend,Monz15594Frequency,Monz15423Spend,Monz15423Frequency,Monz15412Spend,Monz15412Frequency,Monz15318Spend,Monz15318Frequency,Monz15314Spend,Monz15314Frequency,Monz1-2Spend,Monz1-2Frequency,FrizWedSpend,FrizWedFrequency,FrizTueSpend,FrizTueFrequency,FrizThuSpend,FrizThuFrequency,FrizSunSpend,FrizSunFrequency,FrizSatSpend,FrizSatFrequency,FrizMonSpend,FrizMonFrequency,FrizIntrovertSpend,FrizIntrovertFrequency,FrizIntentionalSpend,FrizIntentionalFrequency,FrizIndustriousSpend,FrizIndustriousFrequency,FrizFriSpend,FrizFriFrequency,FrizEssentialSpend,FrizEssentialFrequency,FrizCardPurchaseSpend,FrizCardPurchaseFrequency,Friz6550Spend,Friz6550Frequency,Friz5-6Spend,Friz5-6Frequency,Friz4121Spend,Friz4121Frequency,Friz4-6Spend,Friz4-6Frequency,Friz3Spend,Friz3Frequency,Friz3-6Spend,Friz3-6Frequency,Friz2Spend,Friz2Frequency,Friz2-6Spend,Friz2-6Frequency,Friz15751Spend,Friz15751Frequency,Friz15711Spend,Friz15711Frequency,Friz15423Spend,Friz15423Frequency,Friz15412Spend,Friz15412Frequency,Friz15318Spend,Friz15318Frequency,Friz15314Spend,Friz15314Frequency,4zTueSpend,4zTueFrequency,4zSatSpend,4zSatFrequency,4zIntrovertSpend,4zIntrovertFrequency,4zInterestSpend,4zInterestFrequency,4zIntentionalSpend,4zIntentionalFrequency,4zFeesSpend,4zFeesFrequency,4zExtrovertSpend,4zExtrovertFrequency,4zExperientialSpend,4zExperientialFrequency,4zEssentialSpend,4zEssentialFrequency,4zDiscretionarySpend,4zDiscretionaryFrequency,4zCardPurchaseSpend,4zCardPurchaseFrequency,4z6544Spend,4z6544Frequency,4z6532Spend,4z6532Frequency,4z6010Spend,4z6010Frequency,4z5735Spend,4z5735Frequency,4z5-3Spend,4z5-3Frequency,4z4Spend,4z4Frequency,4z4-3Spend,4z4-3Frequency,4z3Spend,4z3Frequency,4z2Spend,4z2Frequency,4z15751Spend,4z15751Frequency,4z15658Spend,4z15658Frequency,4z15594Spend,4z15594Frequency,4z15546Spend,4z15546Frequency,4z15445Spend,4z15445Frequency,4z15423Spend,4z15423Frequency,4z15316Spend,4z15316Frequency,4z15314Spend,4z15314Frequency,4z1-7Spend,4z1-7Frequency,3zWedSpend,3zWedFrequency,3zUncategorisedSpend,3zUncategorisedFrequency,3zTueSpend,3zTueFrequency,3zThuSpend,3zThuFrequency,3zSunSpend,3zSunFrequency,3zSatSpend,3zSatFrequency,3zMonSpend,3zMonFrequency,3zIntrovertSpend,3zIntrovertFrequency,3zInterestSpend,3zInterestFrequency,3zIntentionalSpend,3zIntentionalFrequency,3zIndustriousSpend,3zIndustriousFrequency,3zFriSpend,3zFriFrequency,3zFeesSpend,3zFeesFrequency,3zExtrovertSpend,3zExtrovertFrequency,3zExperientialSpend,3zExperientialFrequency,3zEssentialSpend,3zEssentialFrequency,3zDiscretionarySpend,3zDiscretionaryFrequency,3zCardPurchaseSpend,3zCardPurchaseFrequency,3z6550Spend,3z6550Frequency,3z6544Spend,3z6544Frequency,3z6532Spend,3z6532Frequency,3z6010Spend,3z6010Frequency,3z5735Spend,3z5735Frequency,3z4Spend,3z4Frequency,3z4121Spend,3z4121Frequency,3z4-7Spend,3z4-7Frequency,3z4-4Spend,3z4-4Frequency,3z4-2Spend,3z4-2Frequency,3z4-1Spend,3z4-1Frequency,3z3Spend,3z3Frequency,3z3-7Spend,3z3-7Frequency,3z2Spend,3z2Frequency,3z2-7Spend,3z2-7Frequency,3z2-6Spend,3z2-6Frequency,3z2-2Spend,3z2-2Frequency,3z15751Spend,3z15751Frequency,3z15711Spend,3z15711Frequency,3z15667Spend,3z15667Frequency,3z15658Spend,3z15658Frequency,3z15594Spend,3z15594Frequency,3z15546Spend,3z15546Frequency,3z15450Spend,3z15450Frequency,3z15445Spend,3z15445Frequency,3z15423Spend,3z15423Frequency,3z15412Spend,3z15412Frequency,3z15320Spend,3z15320Frequency,3z15318Spend,3z15318Frequency,3z15316Spend,3z15316Frequency,3z15314Spend,3z15314Frequency,3z1-5Spend,3z1-5Frequency,3z1-3Spend,3z1-3Frequency,3z1-1Spend,3z1-1Frequency,3z0Spend,3z0Frequency,2zWedSpend,2zWedFrequency,2zUncategorisedSpend,2zUncategorisedFrequency,2zTueSpend,2zTueFrequency,2zThuSpend,2zThuFrequency,2zSatSpend,2zSatFrequency,2zMonSpend,2zMonFrequency,2zIntrovertSpend,2zIntrovertFrequency,2zInterestSpend,2zInterestFrequency,2zIntentionalSpend,2zIntentionalFrequency,2zIndustriousSpend,2zIndustriousFrequency,2zFriSpend,2zFriFrequency,2zFeesSpend,2zFeesFrequency,2zExtrovertSpend,2zExtrovertFrequency,2zExperientialSpend,2zExperientialFrequency,2zEssentialSpend,2zEssentialFrequency,2zDiscretionarySpend,2zDiscretionaryFrequency,2zCardPurchaseSpend,2zCardPurchaseFrequency,2z6550Spend,2z6550Frequency,2z6544Spend,2z6544Frequency,2z6532Spend,2z6532Frequency,2z5735Spend,2z5735Frequency,2z5-6Spend,2z5-6Frequency,2z4Spend,2z4Frequency,2z4121Spend,2z4121Frequency,2z4-6Spend,2z4-6Frequency,2z4-5Spend,2z4-5Frequency,2z4-4Spend,2z4-4Frequency,2z4-3Spend,2z4-3Frequency,2z3Spend,2z3Frequency,2z3-6Spend,2z3-6Frequency,2z3-5Spend,2z3-5Frequency,2z3-4Spend,2z3-4Frequency,2z2Spend,2z2Frequency,2z2-7Spend,2z2-7Frequency,2z2-6Spend,2z2-6Frequency,2z15751Spend,2z15751Frequency,2z15711Spend,2z15711Frequency,2z15667Spend,2z15667Frequency,2z15658Spend,2z15658Frequency,2z15594Spend,2z15594Frequency,2z15450Spend,2z15450Frequency,2z15445Spend,2z15445Frequency,2z15423Spend,2z15423Frequency,2z15412Spend,2z15412Frequency,2z15320Spend,2z15320Frequency,2z15318Spend,2z15318Frequency,2z15316Spend,2z15316Frequency,2z15314Spend,2z15314Frequency,2z1-7Spend,2z1-7Frequency,2z1-3Spend,2z1-3Frequency,2z1-2Spend,2z1-2Frequency,2z0Spend,2z0Frequency,Extrovert,Introvert,Industrious,Experiential,Enthusiastic,Intentional
## Cold-start: Use the default setting when feature store lookup fails and lookup key fails/or not present
## Offer matrix: will be pre-loaded for performance purposes. Offers per offer_number and value range for selection purposes.
#predictor.offer.matrix={database:'mongodb',db:'fnb_2020_05', table:'personality_offers'}


## ======================================================================================================================
## Campaign Configuration: Moving Spend Score Campaign
## ======================================================================================================================
#predictor.name=spending_moving_score
#
#user.data=/Users/ecosystem/data/fnb_2020_05/
#user.generated.models=/Users/ecosystem/data/fnb_2020_05/models/
#
## Plugin Loader for Pre- and post-scoring logic or interventions
#plugin.prescore=com.ecosystem.plugin.customer.PrePredictCustomer
#plugin.postscore=com.ecosystem.plugin.customer.PostScoreSpendingMovingScore
#
## MOJO keys are loaded into memory and be reloaded with the /reload endpoint
## The sequence is important as first model in list is referenced 1, and second as 2 etc.
#mojo.key=DRF_1_AutoML_20200910_101132.zip,DRF_1_AutoML_20200910_101826.zip,DRF_1_AutoML_20200910_102540.zip,DRF_1_AutoML_20200910_103304.zip,DRF_1_AutoML_20200910_103929.zip,XRT_1_AutoML_20200910_084446.zip,XRT_1_AutoML_20200910_084749.zip,XRT_1_AutoML_20200910_085049.zip,XRT_1_AutoML_20200910_085344.zip,XRT_1_AutoML_20200910_085611.zip,GBM_1_AutoML_20200910_154459.zip,GBM_1_AutoML_20200910_155411.zip,GBM_1_AutoML_20200910_160414.zip,GBM_1_AutoML_20200910_161429.zip,GBM_1_AutoML_20200910_165313.zip
#
## Features
## set default params to retrieve if key fails with lookup:{key:'msisdn',value:123}
## change value:123 to the default key from the feature store
#predictor.param.lookup={predictor:'spending_moving_score',mojo:1,database:'mongodb',db:'fnb',table:'spendScoreFeatureStore',lookup:{key:'CUST_NO',value:123},result:{parm1:'field1', parm2:'field2'}}
#predictor.param.lookup.features=personalityType,15428Spend,15696Spend,15313Spend,15313Frequency,CUST_REC_OPEN_DATE,ExperientialSpend,BOND_IND,5541Spend,RGN_CDE,CUST_AGE,Prepaid_BuyFrequency,15654Spend,TransfersFrequency,15691Frequency,CUST_TOT_DR_BALs,TransfersSpend,NO_WES_ACCT,15312Spend,6545Spend,15751Spend,15751Frequency,1FrequencyN,EssentialSpend,EMPLOYER_NAME,IntrovertSpend
## if type is set to dynamic, this set will be read everytime the api is called for scoring
#predictor.corpora=[{name:'spending_moving_score',database:'mongodb',db:'fnb',table:'spendScoreInterventions', type:'dynamic'}]



######
# if lookup uses one lookup value then:
#    lookup:{key:'msisdn',value:'827010119'}
# if lookup requires more stacked lookup
#    lookup:[{key:'msisdn',value:'827010119','operator':'AND'}, {key:'value',value:66.50}]
######
# Setting defaults for scoring engine, timeout (in seconds) is the amount of time to cache offers (0 to disable) and
# default epsilon can be enabled per case. Create this index for caching:
# db.rechargerecommender.createIndex({"params.value":-1,"cache":1,"date_log":-1})
# New index for caching: createIndex({date_index:1, day_index:1, 'params.value':1, cache:1})
#predictor.offercache=1
#predictor.epsilon=0.05

# Use this setting to define a offer presentation pattern
# If it's set then offers will be presented based on sequence.
# REMEMBER TO START THE PATTERN FROM 0 TODO NEEDS TO BE CHANGED AND START FROM 1
# predictor.pattern=1,3,5,8,13,21,34,55,89,144,233,377,610,987,1597,2584,4181,6765,10946,17711,28657
#predictor.pattern=0,1,2,6,8,9,10,11
#predictor.patternduration=10000
